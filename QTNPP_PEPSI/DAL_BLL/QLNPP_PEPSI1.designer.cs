#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL_BLL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QL_QTNPP_PEPSI")]
	public partial class QLNPP_PEPSI1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBACLUONG(BACLUONG instance);
    partial void UpdateBACLUONG(BACLUONG instance);
    partial void DeleteBACLUONG(BACLUONG instance);
    partial void InsertXUATXU(XUATXU instance);
    partial void UpdateXUATXU(XUATXU instance);
    partial void DeleteXUATXU(XUATXU instance);
    partial void InsertBANGLUONG(BANGLUONG instance);
    partial void UpdateBANGLUONG(BANGLUONG instance);
    partial void DeleteBANGLUONG(BANGLUONG instance);
    partial void InsertCTTB_CTTL(CTTB_CTTL instance);
    partial void UpdateCTTB_CTTL(CTTB_CTTL instance);
    partial void DeleteCTTB_CTTL(CTTB_CTTL instance);
    partial void InsertCHAMCONG(CHAMCONG instance);
    partial void UpdateCHAMCONG(CHAMCONG instance);
    partial void DeleteCHAMCONG(CHAMCONG instance);
    partial void InsertCHITIETBACLUONG(CHITIETBACLUONG instance);
    partial void UpdateCHITIETBACLUONG(CHITIETBACLUONG instance);
    partial void DeleteCHITIETBACLUONG(CHITIETBACLUONG instance);
    partial void InsertCHITIETPHIEUNHAP(CHITIETPHIEUNHAP instance);
    partial void UpdateCHITIETPHIEUNHAP(CHITIETPHIEUNHAP instance);
    partial void DeleteCHITIETPHIEUNHAP(CHITIETPHIEUNHAP instance);
    partial void InsertCHITIETPHIEUXUAT(CHITIETPHIEUXUAT instance);
    partial void UpdateCHITIETPHIEUXUAT(CHITIETPHIEUXUAT instance);
    partial void DeleteCHITIETPHIEUXUAT(CHITIETPHIEUXUAT instance);
    partial void InsertCHITIETHOADONBAN(CHITIETHOADONBAN instance);
    partial void UpdateCHITIETHOADONBAN(CHITIETHOADONBAN instance);
    partial void DeleteCHITIETHOADONBAN(CHITIETHOADONBAN instance);
    partial void InsertDANHMUCMANHINH(DANHMUCMANHINH instance);
    partial void UpdateDANHMUCMANHINH(DANHMUCMANHINH instance);
    partial void DeleteDANHMUCMANHINH(DANHMUCMANHINH instance);
    partial void InsertDK_CTTB_CTTL(DK_CTTB_CTTL instance);
    partial void UpdateDK_CTTB_CTTL(DK_CTTB_CTTL instance);
    partial void DeleteDK_CTTB_CTTL(DK_CTTB_CTTL instance);
    partial void InsertHANGSANXUAT(HANGSANXUAT instance);
    partial void UpdateHANGSANXUAT(HANGSANXUAT instance);
    partial void DeleteHANGSANXUAT(HANGSANXUAT instance);
    partial void InsertHOADONBAN(HOADONBAN instance);
    partial void UpdateHOADONBAN(HOADONBAN instance);
    partial void DeleteHOADONBAN(HOADONBAN instance);
    partial void InsertKHACHHANG(KHACHHANG instance);
    partial void UpdateKHACHHANG(KHACHHANG instance);
    partial void DeleteKHACHHANG(KHACHHANG instance);
    partial void InsertLOAIKHACHHANG(LOAIKHACHHANG instance);
    partial void UpdateLOAIKHACHHANG(LOAIKHACHHANG instance);
    partial void DeleteLOAIKHACHHANG(LOAIKHACHHANG instance);
    partial void InsertLOAISANPHAM(LOAISANPHAM instance);
    partial void UpdateLOAISANPHAM(LOAISANPHAM instance);
    partial void DeleteLOAISANPHAM(LOAISANPHAM instance);
    partial void InsertNHACUNGCAP(NHACUNGCAP instance);
    partial void UpdateNHACUNGCAP(NHACUNGCAP instance);
    partial void DeleteNHACUNGCAP(NHACUNGCAP instance);
    partial void InsertNHANVIEN(NHANVIEN instance);
    partial void UpdateNHANVIEN(NHANVIEN instance);
    partial void DeleteNHANVIEN(NHANVIEN instance);
    partial void InsertNHOMNHANVIEN(NHOMNHANVIEN instance);
    partial void UpdateNHOMNHANVIEN(NHOMNHANVIEN instance);
    partial void DeleteNHOMNHANVIEN(NHOMNHANVIEN instance);
    partial void InsertPAL(PAL instance);
    partial void UpdatePAL(PAL instance);
    partial void DeletePAL(PAL instance);
    partial void InsertPHANQUYEN(PHANQUYEN instance);
    partial void UpdatePHANQUYEN(PHANQUYEN instance);
    partial void DeletePHANQUYEN(PHANQUYEN instance);
    partial void InsertPHIEUNHAPHANG(PHIEUNHAPHANG instance);
    partial void UpdatePHIEUNHAPHANG(PHIEUNHAPHANG instance);
    partial void DeletePHIEUNHAPHANG(PHIEUNHAPHANG instance);
    partial void InsertPHIEUXUATHANG(PHIEUXUATHANG instance);
    partial void UpdatePHIEUXUATHANG(PHIEUXUATHANG instance);
    partial void DeletePHIEUXUATHANG(PHIEUXUATHANG instance);
    partial void InsertQUANHUYEN(QUANHUYEN instance);
    partial void UpdateQUANHUYEN(QUANHUYEN instance);
    partial void DeleteQUANHUYEN(QUANHUYEN instance);
    partial void InsertSANPHAM(SANPHAM instance);
    partial void UpdateSANPHAM(SANPHAM instance);
    partial void DeleteSANPHAM(SANPHAM instance);
    partial void InsertTINHTHANH(TINHTHANH instance);
    partial void UpdateTINHTHANH(TINHTHANH instance);
    partial void DeleteTINHTHANH(TINHTHANH instance);
    #endregion
		
		public QLNPP_PEPSI1DataContext() : 
				base(global::DAL_BLL.Properties.Settings.Default.QL_QTNPP_PEPSIConnectionString2, mappingSource)
		{
			OnCreated();
		}
		
		public QLNPP_PEPSI1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLNPP_PEPSI1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLNPP_PEPSI1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLNPP_PEPSI1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BACLUONG> BACLUONGs
		{
			get
			{
				return this.GetTable<BACLUONG>();
			}
		}
		
		public System.Data.Linq.Table<XUATXU> XUATXUs
		{
			get
			{
				return this.GetTable<XUATXU>();
			}
		}
		
		public System.Data.Linq.Table<BANGLUONG> BANGLUONGs
		{
			get
			{
				return this.GetTable<BANGLUONG>();
			}
		}
		
		public System.Data.Linq.Table<CTTB_CTTL> CTTB_CTTLs
		{
			get
			{
				return this.GetTable<CTTB_CTTL>();
			}
		}
		
		public System.Data.Linq.Table<CHAMCONG> CHAMCONGs
		{
			get
			{
				return this.GetTable<CHAMCONG>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETBACLUONG> CHITIETBACLUONGs
		{
			get
			{
				return this.GetTable<CHITIETBACLUONG>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETPHIEUNHAP> CHITIETPHIEUNHAPs
		{
			get
			{
				return this.GetTable<CHITIETPHIEUNHAP>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETPHIEUXUAT> CHITIETPHIEUXUATs
		{
			get
			{
				return this.GetTable<CHITIETPHIEUXUAT>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETHOADONBAN> CHITIETHOADONBANs
		{
			get
			{
				return this.GetTable<CHITIETHOADONBAN>();
			}
		}
		
		public System.Data.Linq.Table<DANHMUCMANHINH> DANHMUCMANHINHs
		{
			get
			{
				return this.GetTable<DANHMUCMANHINH>();
			}
		}
		
		public System.Data.Linq.Table<DK_CTTB_CTTL> DK_CTTB_CTTLs
		{
			get
			{
				return this.GetTable<DK_CTTB_CTTL>();
			}
		}
		
		public System.Data.Linq.Table<HANGSANXUAT> HANGSANXUATs
		{
			get
			{
				return this.GetTable<HANGSANXUAT>();
			}
		}
		
		public System.Data.Linq.Table<HOADONBAN> HOADONBANs
		{
			get
			{
				return this.GetTable<HOADONBAN>();
			}
		}
		
		public System.Data.Linq.Table<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this.GetTable<KHACHHANG>();
			}
		}
		
		public System.Data.Linq.Table<LOAIKHACHHANG> LOAIKHACHHANGs
		{
			get
			{
				return this.GetTable<LOAIKHACHHANG>();
			}
		}
		
		public System.Data.Linq.Table<LOAISANPHAM> LOAISANPHAMs
		{
			get
			{
				return this.GetTable<LOAISANPHAM>();
			}
		}
		
		public System.Data.Linq.Table<NHACUNGCAP> NHACUNGCAPs
		{
			get
			{
				return this.GetTable<NHACUNGCAP>();
			}
		}
		
		public System.Data.Linq.Table<NHANVIEN> NHANVIENs
		{
			get
			{
				return this.GetTable<NHANVIEN>();
			}
		}
		
		public System.Data.Linq.Table<NHOMNHANVIEN> NHOMNHANVIENs
		{
			get
			{
				return this.GetTable<NHOMNHANVIEN>();
			}
		}
		
		public System.Data.Linq.Table<PAL> PALs
		{
			get
			{
				return this.GetTable<PAL>();
			}
		}
		
		public System.Data.Linq.Table<PHANQUYEN> PHANQUYENs
		{
			get
			{
				return this.GetTable<PHANQUYEN>();
			}
		}
		
		public System.Data.Linq.Table<PHIEUNHAPHANG> PHIEUNHAPHANGs
		{
			get
			{
				return this.GetTable<PHIEUNHAPHANG>();
			}
		}
		
		public System.Data.Linq.Table<PHIEUXUATHANG> PHIEUXUATHANGs
		{
			get
			{
				return this.GetTable<PHIEUXUATHANG>();
			}
		}
		
		public System.Data.Linq.Table<QUANHUYEN> QUANHUYENs
		{
			get
			{
				return this.GetTable<QUANHUYEN>();
			}
		}
		
		public System.Data.Linq.Table<SANPHAM> SANPHAMs
		{
			get
			{
				return this.GetTable<SANPHAM>();
			}
		}
		
		public System.Data.Linq.Table<TINHTHANH> TINHTHANHs
		{
			get
			{
				return this.GetTable<TINHTHANH>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BACLUONG")]
	public partial class BACLUONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MABAC;
		
		private string _TENBAC;
		
		private double _HESO;
		
		private EntitySet<CHITIETBACLUONG> _CHITIETBACLUONGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMABACChanging(string value);
    partial void OnMABACChanged();
    partial void OnTENBACChanging(string value);
    partial void OnTENBACChanged();
    partial void OnHESOChanging(double value);
    partial void OnHESOChanged();
    #endregion
		
		public BACLUONG()
		{
			this._CHITIETBACLUONGs = new EntitySet<CHITIETBACLUONG>(new Action<CHITIETBACLUONG>(this.attach_CHITIETBACLUONGs), new Action<CHITIETBACLUONG>(this.detach_CHITIETBACLUONGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MABAC", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MABAC
		{
			get
			{
				return this._MABAC;
			}
			set
			{
				if ((this._MABAC != value))
				{
					this.OnMABACChanging(value);
					this.SendPropertyChanging();
					this._MABAC = value;
					this.SendPropertyChanged("MABAC");
					this.OnMABACChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENBAC", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string TENBAC
		{
			get
			{
				return this._TENBAC;
			}
			set
			{
				if ((this._TENBAC != value))
				{
					this.OnTENBACChanging(value);
					this.SendPropertyChanging();
					this._TENBAC = value;
					this.SendPropertyChanged("TENBAC");
					this.OnTENBACChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HESO", DbType="Float NOT NULL")]
		public double HESO
		{
			get
			{
				return this._HESO;
			}
			set
			{
				if ((this._HESO != value))
				{
					this.OnHESOChanging(value);
					this.SendPropertyChanging();
					this._HESO = value;
					this.SendPropertyChanged("HESO");
					this.OnHESOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BACLUONG_CHITIETBACLUONG", Storage="_CHITIETBACLUONGs", ThisKey="MABAC", OtherKey="MABAC")]
		public EntitySet<CHITIETBACLUONG> CHITIETBACLUONGs
		{
			get
			{
				return this._CHITIETBACLUONGs;
			}
			set
			{
				this._CHITIETBACLUONGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETBACLUONGs(CHITIETBACLUONG entity)
		{
			this.SendPropertyChanging();
			entity.BACLUONG = this;
		}
		
		private void detach_CHITIETBACLUONGs(CHITIETBACLUONG entity)
		{
			this.SendPropertyChanging();
			entity.BACLUONG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.XUATXU")]
	public partial class XUATXU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAXUATXU;
		
		private string _TENXUATXU;
		
		private string _LOAIXUATXU;
		
		private EntitySet<SANPHAM> _SANPHAMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAXUATXUChanging(string value);
    partial void OnMAXUATXUChanged();
    partial void OnTENXUATXUChanging(string value);
    partial void OnTENXUATXUChanged();
    partial void OnLOAIXUATXUChanging(string value);
    partial void OnLOAIXUATXUChanged();
    #endregion
		
		public XUATXU()
		{
			this._SANPHAMs = new EntitySet<SANPHAM>(new Action<SANPHAM>(this.attach_SANPHAMs), new Action<SANPHAM>(this.detach_SANPHAMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAXUATXU", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAXUATXU
		{
			get
			{
				return this._MAXUATXU;
			}
			set
			{
				if ((this._MAXUATXU != value))
				{
					this.OnMAXUATXUChanging(value);
					this.SendPropertyChanging();
					this._MAXUATXU = value;
					this.SendPropertyChanged("MAXUATXU");
					this.OnMAXUATXUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENXUATXU", DbType="NVarChar(500)")]
		public string TENXUATXU
		{
			get
			{
				return this._TENXUATXU;
			}
			set
			{
				if ((this._TENXUATXU != value))
				{
					this.OnTENXUATXUChanging(value);
					this.SendPropertyChanging();
					this._TENXUATXU = value;
					this.SendPropertyChanged("TENXUATXU");
					this.OnTENXUATXUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOAIXUATXU", DbType="NVarChar(500)")]
		public string LOAIXUATXU
		{
			get
			{
				return this._LOAIXUATXU;
			}
			set
			{
				if ((this._LOAIXUATXU != value))
				{
					this.OnLOAIXUATXUChanging(value);
					this.SendPropertyChanging();
					this._LOAIXUATXU = value;
					this.SendPropertyChanged("LOAIXUATXU");
					this.OnLOAIXUATXUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="XUATXU_SANPHAM", Storage="_SANPHAMs", ThisKey="MAXUATXU", OtherKey="MAXUATXU")]
		public EntitySet<SANPHAM> SANPHAMs
		{
			get
			{
				return this._SANPHAMs;
			}
			set
			{
				this._SANPHAMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.XUATXU = this;
		}
		
		private void detach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.XUATXU = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BANGLUONG")]
	public partial class BANGLUONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MABANGLUONG;
		
		private string _MANV;
		
		private decimal _LUONGTHUCTE;
		
		private System.DateTime _NGAYAPDUNG;
		
		private string _GHICHUBL;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMABANGLUONGChanging(string value);
    partial void OnMABANGLUONGChanged();
    partial void OnMANVChanging(string value);
    partial void OnMANVChanged();
    partial void OnLUONGTHUCTEChanging(decimal value);
    partial void OnLUONGTHUCTEChanged();
    partial void OnNGAYAPDUNGChanging(System.DateTime value);
    partial void OnNGAYAPDUNGChanged();
    partial void OnGHICHUBLChanging(string value);
    partial void OnGHICHUBLChanged();
    #endregion
		
		public BANGLUONG()
		{
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MABANGLUONG", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MABANGLUONG
		{
			get
			{
				return this._MABANGLUONG;
			}
			set
			{
				if ((this._MABANGLUONG != value))
				{
					this.OnMABANGLUONGChanging(value);
					this.SendPropertyChanging();
					this._MABANGLUONG = value;
					this.SendPropertyChanged("MABANGLUONG");
					this.OnMABANGLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LUONGTHUCTE", DbType="Decimal(18,0) NOT NULL")]
		public decimal LUONGTHUCTE
		{
			get
			{
				return this._LUONGTHUCTE;
			}
			set
			{
				if ((this._LUONGTHUCTE != value))
				{
					this.OnLUONGTHUCTEChanging(value);
					this.SendPropertyChanging();
					this._LUONGTHUCTE = value;
					this.SendPropertyChanged("LUONGTHUCTE");
					this.OnLUONGTHUCTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYAPDUNG", DbType="Date NOT NULL")]
		public System.DateTime NGAYAPDUNG
		{
			get
			{
				return this._NGAYAPDUNG;
			}
			set
			{
				if ((this._NGAYAPDUNG != value))
				{
					this.OnNGAYAPDUNGChanging(value);
					this.SendPropertyChanging();
					this._NGAYAPDUNG = value;
					this.SendPropertyChanged("NGAYAPDUNG");
					this.OnNGAYAPDUNGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GHICHUBL", DbType="NVarChar(500)")]
		public string GHICHUBL
		{
			get
			{
				return this._GHICHUBL;
			}
			set
			{
				if ((this._GHICHUBL != value))
				{
					this.OnGHICHUBLChanging(value);
					this.SendPropertyChanging();
					this._GHICHUBL = value;
					this.SendPropertyChanged("GHICHUBL");
					this.OnGHICHUBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_BANGLUONG", Storage="_NHANVIEN", ThisKey="MANV", OtherKey="MANV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.BANGLUONGs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.BANGLUONGs.Add(this);
						this._MANV = value.MANV;
					}
					else
					{
						this._MANV = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTTB_CTTL")]
	public partial class CTTB_CTTL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MACT;
		
		private string _TENCT;
		
		private int _SOSUAT;
		
		private string _MASP;
		
		private System.DateTime _NGAYBD;
		
		private System.Nullable<System.DateTime> _NGAYKT;
		
		private System.Nullable<decimal> _DIEMDAT;
		
		private string _HINHANH;
		
		private EntitySet<DK_CTTB_CTTL> _DK_CTTB_CTTLs;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMACTChanging(string value);
    partial void OnMACTChanged();
    partial void OnTENCTChanging(string value);
    partial void OnTENCTChanged();
    partial void OnSOSUATChanging(int value);
    partial void OnSOSUATChanged();
    partial void OnMASPChanging(string value);
    partial void OnMASPChanged();
    partial void OnNGAYBDChanging(System.DateTime value);
    partial void OnNGAYBDChanged();
    partial void OnNGAYKTChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYKTChanged();
    partial void OnDIEMDATChanging(System.Nullable<decimal> value);
    partial void OnDIEMDATChanged();
    partial void OnHINHANHChanging(string value);
    partial void OnHINHANHChanged();
    #endregion
		
		public CTTB_CTTL()
		{
			this._DK_CTTB_CTTLs = new EntitySet<DK_CTTB_CTTL>(new Action<DK_CTTB_CTTL>(this.attach_DK_CTTB_CTTLs), new Action<DK_CTTB_CTTL>(this.detach_DK_CTTB_CTTLs));
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACT", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MACT
		{
			get
			{
				return this._MACT;
			}
			set
			{
				if ((this._MACT != value))
				{
					this.OnMACTChanging(value);
					this.SendPropertyChanging();
					this._MACT = value;
					this.SendPropertyChanged("MACT");
					this.OnMACTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENCT", DbType="NVarChar(210) NOT NULL", CanBeNull=false)]
		public string TENCT
		{
			get
			{
				return this._TENCT;
			}
			set
			{
				if ((this._TENCT != value))
				{
					this.OnTENCTChanging(value);
					this.SendPropertyChanging();
					this._TENCT = value;
					this.SendPropertyChanged("TENCT");
					this.OnTENCTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOSUAT", DbType="Int NOT NULL")]
		public int SOSUAT
		{
			get
			{
				return this._SOSUAT;
			}
			set
			{
				if ((this._SOSUAT != value))
				{
					this.OnSOSUATChanging(value);
					this.SendPropertyChanging();
					this._SOSUAT = value;
					this.SendPropertyChanged("SOSUAT");
					this.OnSOSUATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASP", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MASP
		{
			get
			{
				return this._MASP;
			}
			set
			{
				if ((this._MASP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASPChanging(value);
					this.SendPropertyChanging();
					this._MASP = value;
					this.SendPropertyChanged("MASP");
					this.OnMASPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYBD", DbType="Date NOT NULL")]
		public System.DateTime NGAYBD
		{
			get
			{
				return this._NGAYBD;
			}
			set
			{
				if ((this._NGAYBD != value))
				{
					this.OnNGAYBDChanging(value);
					this.SendPropertyChanging();
					this._NGAYBD = value;
					this.SendPropertyChanged("NGAYBD");
					this.OnNGAYBDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYKT", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYKT
		{
			get
			{
				return this._NGAYKT;
			}
			set
			{
				if ((this._NGAYKT != value))
				{
					this.OnNGAYKTChanging(value);
					this.SendPropertyChanging();
					this._NGAYKT = value;
					this.SendPropertyChanged("NGAYKT");
					this.OnNGAYKTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIEMDAT", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> DIEMDAT
		{
			get
			{
				return this._DIEMDAT;
			}
			set
			{
				if ((this._DIEMDAT != value))
				{
					this.OnDIEMDATChanging(value);
					this.SendPropertyChanging();
					this._DIEMDAT = value;
					this.SendPropertyChanged("DIEMDAT");
					this.OnDIEMDATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HINHANH", DbType="NVarChar(210)")]
		public string HINHANH
		{
			get
			{
				return this._HINHANH;
			}
			set
			{
				if ((this._HINHANH != value))
				{
					this.OnHINHANHChanging(value);
					this.SendPropertyChanging();
					this._HINHANH = value;
					this.SendPropertyChanged("HINHANH");
					this.OnHINHANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CTTB_CTTL_DK_CTTB_CTTL", Storage="_DK_CTTB_CTTLs", ThisKey="MACT", OtherKey="MACT")]
		public EntitySet<DK_CTTB_CTTL> DK_CTTB_CTTLs
		{
			get
			{
				return this._DK_CTTB_CTTLs;
			}
			set
			{
				this._DK_CTTB_CTTLs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CTTB_CTTL", Storage="_SANPHAM", ThisKey="MASP", OtherKey="MASP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.CTTB_CTTLs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.CTTB_CTTLs.Add(this);
						this._MASP = value.MASP;
					}
					else
					{
						this._MASP = default(string);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DK_CTTB_CTTLs(DK_CTTB_CTTL entity)
		{
			this.SendPropertyChanging();
			entity.CTTB_CTTL = this;
		}
		
		private void detach_DK_CTTB_CTTLs(DK_CTTB_CTTL entity)
		{
			this.SendPropertyChanging();
			entity.CTTB_CTTL = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHAMCONG")]
	public partial class CHAMCONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MANV;
		
		private string _MACHAMCONG;
		
		private int _THANG;
		
		private int _NAM;
		
		private int _SONGAYLAMVIEC;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANVChanging(string value);
    partial void OnMANVChanged();
    partial void OnMACHAMCONGChanging(string value);
    partial void OnMACHAMCONGChanged();
    partial void OnTHANGChanging(int value);
    partial void OnTHANGChanged();
    partial void OnNAMChanging(int value);
    partial void OnNAMChanged();
    partial void OnSONGAYLAMVIECChanging(int value);
    partial void OnSONGAYLAMVIECChanged();
    #endregion
		
		public CHAMCONG()
		{
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACHAMCONG", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MACHAMCONG
		{
			get
			{
				return this._MACHAMCONG;
			}
			set
			{
				if ((this._MACHAMCONG != value))
				{
					this.OnMACHAMCONGChanging(value);
					this.SendPropertyChanging();
					this._MACHAMCONG = value;
					this.SendPropertyChanged("MACHAMCONG");
					this.OnMACHAMCONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THANG", DbType="Int NOT NULL")]
		public int THANG
		{
			get
			{
				return this._THANG;
			}
			set
			{
				if ((this._THANG != value))
				{
					this.OnTHANGChanging(value);
					this.SendPropertyChanging();
					this._THANG = value;
					this.SendPropertyChanged("THANG");
					this.OnTHANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAM", DbType="Int NOT NULL")]
		public int NAM
		{
			get
			{
				return this._NAM;
			}
			set
			{
				if ((this._NAM != value))
				{
					this.OnNAMChanging(value);
					this.SendPropertyChanging();
					this._NAM = value;
					this.SendPropertyChanged("NAM");
					this.OnNAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SONGAYLAMVIEC", DbType="Int NOT NULL")]
		public int SONGAYLAMVIEC
		{
			get
			{
				return this._SONGAYLAMVIEC;
			}
			set
			{
				if ((this._SONGAYLAMVIEC != value))
				{
					this.OnSONGAYLAMVIECChanging(value);
					this.SendPropertyChanging();
					this._SONGAYLAMVIEC = value;
					this.SendPropertyChanged("SONGAYLAMVIEC");
					this.OnSONGAYLAMVIECChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_CHAMCONG", Storage="_NHANVIEN", ThisKey="MANV", OtherKey="MANV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.CHAMCONGs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.CHAMCONGs.Add(this);
						this._MANV = value.MANV;
					}
					else
					{
						this._MANV = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETBACLUONG")]
	public partial class CHITIETBACLUONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MABAC;
		
		private string _MANV;
		
		private System.DateTime _TUNGAY;
		
		private System.DateTime _DENNGAY;
		
		private EntityRef<BACLUONG> _BACLUONG;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMABACChanging(string value);
    partial void OnMABACChanged();
    partial void OnMANVChanging(string value);
    partial void OnMANVChanged();
    partial void OnTUNGAYChanging(System.DateTime value);
    partial void OnTUNGAYChanged();
    partial void OnDENNGAYChanging(System.DateTime value);
    partial void OnDENNGAYChanged();
    #endregion
		
		public CHITIETBACLUONG()
		{
			this._BACLUONG = default(EntityRef<BACLUONG>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MABAC", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MABAC
		{
			get
			{
				return this._MABAC;
			}
			set
			{
				if ((this._MABAC != value))
				{
					if (this._BACLUONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMABACChanging(value);
					this.SendPropertyChanging();
					this._MABAC = value;
					this.SendPropertyChanged("MABAC");
					this.OnMABACChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TUNGAY", DbType="Date NOT NULL")]
		public System.DateTime TUNGAY
		{
			get
			{
				return this._TUNGAY;
			}
			set
			{
				if ((this._TUNGAY != value))
				{
					this.OnTUNGAYChanging(value);
					this.SendPropertyChanging();
					this._TUNGAY = value;
					this.SendPropertyChanged("TUNGAY");
					this.OnTUNGAYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DENNGAY", DbType="Date NOT NULL")]
		public System.DateTime DENNGAY
		{
			get
			{
				return this._DENNGAY;
			}
			set
			{
				if ((this._DENNGAY != value))
				{
					this.OnDENNGAYChanging(value);
					this.SendPropertyChanging();
					this._DENNGAY = value;
					this.SendPropertyChanged("DENNGAY");
					this.OnDENNGAYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BACLUONG_CHITIETBACLUONG", Storage="_BACLUONG", ThisKey="MABAC", OtherKey="MABAC", IsForeignKey=true)]
		public BACLUONG BACLUONG
		{
			get
			{
				return this._BACLUONG.Entity;
			}
			set
			{
				BACLUONG previousValue = this._BACLUONG.Entity;
				if (((previousValue != value) 
							|| (this._BACLUONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BACLUONG.Entity = null;
						previousValue.CHITIETBACLUONGs.Remove(this);
					}
					this._BACLUONG.Entity = value;
					if ((value != null))
					{
						value.CHITIETBACLUONGs.Add(this);
						this._MABAC = value.MABAC;
					}
					else
					{
						this._MABAC = default(string);
					}
					this.SendPropertyChanged("BACLUONG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_CHITIETBACLUONG", Storage="_NHANVIEN", ThisKey="MANV", OtherKey="MANV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.CHITIETBACLUONGs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.CHITIETBACLUONGs.Add(this);
						this._MANV = value.MANV;
					}
					else
					{
						this._MANV = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETPHIEUNHAP")]
	public partial class CHITIETPHIEUNHAP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAPN;
		
		private string _MASP;
		
		private int _SOLUONGNHAP;
		
		private string _DVT;
		
		private decimal _THANHTIEN;
		
		private System.Nullable<decimal> _DONGIABAN;
		
		private EntityRef<PHIEUNHAPHANG> _PHIEUNHAPHANG;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPNChanging(string value);
    partial void OnMAPNChanged();
    partial void OnMASPChanging(string value);
    partial void OnMASPChanged();
    partial void OnSOLUONGNHAPChanging(int value);
    partial void OnSOLUONGNHAPChanged();
    partial void OnDVTChanging(string value);
    partial void OnDVTChanged();
    partial void OnTHANHTIENChanging(decimal value);
    partial void OnTHANHTIENChanged();
    partial void OnDONGIABANChanging(System.Nullable<decimal> value);
    partial void OnDONGIABANChanged();
    #endregion
		
		public CHITIETPHIEUNHAP()
		{
			this._PHIEUNHAPHANG = default(EntityRef<PHIEUNHAPHANG>);
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPN", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAPN
		{
			get
			{
				return this._MAPN;
			}
			set
			{
				if ((this._MAPN != value))
				{
					if (this._PHIEUNHAPHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPNChanging(value);
					this.SendPropertyChanging();
					this._MAPN = value;
					this.SendPropertyChanged("MAPN");
					this.OnMAPNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASP", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MASP
		{
			get
			{
				return this._MASP;
			}
			set
			{
				if ((this._MASP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASPChanging(value);
					this.SendPropertyChanging();
					this._MASP = value;
					this.SendPropertyChanged("MASP");
					this.OnMASPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONGNHAP", DbType="Int NOT NULL")]
		public int SOLUONGNHAP
		{
			get
			{
				return this._SOLUONGNHAP;
			}
			set
			{
				if ((this._SOLUONGNHAP != value))
				{
					this.OnSOLUONGNHAPChanging(value);
					this.SendPropertyChanging();
					this._SOLUONGNHAP = value;
					this.SendPropertyChanged("SOLUONGNHAP");
					this.OnSOLUONGNHAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DVT", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string DVT
		{
			get
			{
				return this._DVT;
			}
			set
			{
				if ((this._DVT != value))
				{
					this.OnDVTChanging(value);
					this.SendPropertyChanging();
					this._DVT = value;
					this.SendPropertyChanged("DVT");
					this.OnDVTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THANHTIEN", DbType="Decimal(18,0) NOT NULL")]
		public decimal THANHTIEN
		{
			get
			{
				return this._THANHTIEN;
			}
			set
			{
				if ((this._THANHTIEN != value))
				{
					this.OnTHANHTIENChanging(value);
					this.SendPropertyChanging();
					this._THANHTIEN = value;
					this.SendPropertyChanged("THANHTIEN");
					this.OnTHANHTIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DONGIABAN", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> DONGIABAN
		{
			get
			{
				return this._DONGIABAN;
			}
			set
			{
				if ((this._DONGIABAN != value))
				{
					this.OnDONGIABANChanging(value);
					this.SendPropertyChanging();
					this._DONGIABAN = value;
					this.SendPropertyChanged("DONGIABAN");
					this.OnDONGIABANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUNHAPHANG_CHITIETPHIEUNHAP", Storage="_PHIEUNHAPHANG", ThisKey="MAPN", OtherKey="MAPN", IsForeignKey=true)]
		public PHIEUNHAPHANG PHIEUNHAPHANG
		{
			get
			{
				return this._PHIEUNHAPHANG.Entity;
			}
			set
			{
				PHIEUNHAPHANG previousValue = this._PHIEUNHAPHANG.Entity;
				if (((previousValue != value) 
							|| (this._PHIEUNHAPHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIEUNHAPHANG.Entity = null;
						previousValue.CHITIETPHIEUNHAPs.Remove(this);
					}
					this._PHIEUNHAPHANG.Entity = value;
					if ((value != null))
					{
						value.CHITIETPHIEUNHAPs.Add(this);
						this._MAPN = value.MAPN;
					}
					else
					{
						this._MAPN = default(string);
					}
					this.SendPropertyChanged("PHIEUNHAPHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CHITIETPHIEUNHAP", Storage="_SANPHAM", ThisKey="MASP", OtherKey="MASP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.CHITIETPHIEUNHAPs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.CHITIETPHIEUNHAPs.Add(this);
						this._MASP = value.MASP;
					}
					else
					{
						this._MASP = default(string);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETPHIEUXUAT")]
	public partial class CHITIETPHIEUXUAT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAPX;
		
		private string _MASP;
		
		private int _SOLUONGNHAP;
		
		private string _DVT;
		
		private decimal _THANHTIEN;
		
		private System.Nullable<decimal> _DONGIABAN;
		
		private EntityRef<PHIEUXUATHANG> _PHIEUXUATHANG;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPXChanging(string value);
    partial void OnMAPXChanged();
    partial void OnMASPChanging(string value);
    partial void OnMASPChanged();
    partial void OnSOLUONGNHAPChanging(int value);
    partial void OnSOLUONGNHAPChanged();
    partial void OnDVTChanging(string value);
    partial void OnDVTChanged();
    partial void OnTHANHTIENChanging(decimal value);
    partial void OnTHANHTIENChanged();
    partial void OnDONGIABANChanging(System.Nullable<decimal> value);
    partial void OnDONGIABANChanged();
    #endregion
		
		public CHITIETPHIEUXUAT()
		{
			this._PHIEUXUATHANG = default(EntityRef<PHIEUXUATHANG>);
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPX", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAPX
		{
			get
			{
				return this._MAPX;
			}
			set
			{
				if ((this._MAPX != value))
				{
					if (this._PHIEUXUATHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPXChanging(value);
					this.SendPropertyChanging();
					this._MAPX = value;
					this.SendPropertyChanged("MAPX");
					this.OnMAPXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASP", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MASP
		{
			get
			{
				return this._MASP;
			}
			set
			{
				if ((this._MASP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASPChanging(value);
					this.SendPropertyChanging();
					this._MASP = value;
					this.SendPropertyChanged("MASP");
					this.OnMASPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONGNHAP", DbType="Int NOT NULL")]
		public int SOLUONGNHAP
		{
			get
			{
				return this._SOLUONGNHAP;
			}
			set
			{
				if ((this._SOLUONGNHAP != value))
				{
					this.OnSOLUONGNHAPChanging(value);
					this.SendPropertyChanging();
					this._SOLUONGNHAP = value;
					this.SendPropertyChanged("SOLUONGNHAP");
					this.OnSOLUONGNHAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DVT", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string DVT
		{
			get
			{
				return this._DVT;
			}
			set
			{
				if ((this._DVT != value))
				{
					this.OnDVTChanging(value);
					this.SendPropertyChanging();
					this._DVT = value;
					this.SendPropertyChanged("DVT");
					this.OnDVTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THANHTIEN", DbType="Decimal(18,0) NOT NULL")]
		public decimal THANHTIEN
		{
			get
			{
				return this._THANHTIEN;
			}
			set
			{
				if ((this._THANHTIEN != value))
				{
					this.OnTHANHTIENChanging(value);
					this.SendPropertyChanging();
					this._THANHTIEN = value;
					this.SendPropertyChanged("THANHTIEN");
					this.OnTHANHTIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DONGIABAN", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> DONGIABAN
		{
			get
			{
				return this._DONGIABAN;
			}
			set
			{
				if ((this._DONGIABAN != value))
				{
					this.OnDONGIABANChanging(value);
					this.SendPropertyChanging();
					this._DONGIABAN = value;
					this.SendPropertyChanged("DONGIABAN");
					this.OnDONGIABANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUXUATHANG_CHITIETPHIEUXUAT", Storage="_PHIEUXUATHANG", ThisKey="MAPX", OtherKey="MAPX", IsForeignKey=true)]
		public PHIEUXUATHANG PHIEUXUATHANG
		{
			get
			{
				return this._PHIEUXUATHANG.Entity;
			}
			set
			{
				PHIEUXUATHANG previousValue = this._PHIEUXUATHANG.Entity;
				if (((previousValue != value) 
							|| (this._PHIEUXUATHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIEUXUATHANG.Entity = null;
						previousValue.CHITIETPHIEUXUATs.Remove(this);
					}
					this._PHIEUXUATHANG.Entity = value;
					if ((value != null))
					{
						value.CHITIETPHIEUXUATs.Add(this);
						this._MAPX = value.MAPX;
					}
					else
					{
						this._MAPX = default(string);
					}
					this.SendPropertyChanged("PHIEUXUATHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CHITIETPHIEUXUAT", Storage="_SANPHAM", ThisKey="MASP", OtherKey="MASP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.CHITIETPHIEUXUATs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.CHITIETPHIEUXUATs.Add(this);
						this._MASP = value.MASP;
					}
					else
					{
						this._MASP = default(string);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETHOADONBAN")]
	public partial class CHITIETHOADONBAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAHDB;
		
		private string _MASP;
		
		private int _SOLUONGBAN;
		
		private decimal _THANHTIENBAN;
		
		private EntityRef<HOADONBAN> _HOADONBAN;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAHDBChanging(string value);
    partial void OnMAHDBChanged();
    partial void OnMASPChanging(string value);
    partial void OnMASPChanged();
    partial void OnSOLUONGBANChanging(int value);
    partial void OnSOLUONGBANChanged();
    partial void OnTHANHTIENBANChanging(decimal value);
    partial void OnTHANHTIENBANChanged();
    #endregion
		
		public CHITIETHOADONBAN()
		{
			this._HOADONBAN = default(EntityRef<HOADONBAN>);
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHDB", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAHDB
		{
			get
			{
				return this._MAHDB;
			}
			set
			{
				if ((this._MAHDB != value))
				{
					if (this._HOADONBAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAHDBChanging(value);
					this.SendPropertyChanging();
					this._MAHDB = value;
					this.SendPropertyChanged("MAHDB");
					this.OnMAHDBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASP", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MASP
		{
			get
			{
				return this._MASP;
			}
			set
			{
				if ((this._MASP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASPChanging(value);
					this.SendPropertyChanging();
					this._MASP = value;
					this.SendPropertyChanged("MASP");
					this.OnMASPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONGBAN", DbType="Int NOT NULL")]
		public int SOLUONGBAN
		{
			get
			{
				return this._SOLUONGBAN;
			}
			set
			{
				if ((this._SOLUONGBAN != value))
				{
					this.OnSOLUONGBANChanging(value);
					this.SendPropertyChanging();
					this._SOLUONGBAN = value;
					this.SendPropertyChanged("SOLUONGBAN");
					this.OnSOLUONGBANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THANHTIENBAN", DbType="Decimal(18,0) NOT NULL")]
		public decimal THANHTIENBAN
		{
			get
			{
				return this._THANHTIENBAN;
			}
			set
			{
				if ((this._THANHTIENBAN != value))
				{
					this.OnTHANHTIENBANChanging(value);
					this.SendPropertyChanging();
					this._THANHTIENBAN = value;
					this.SendPropertyChanged("THANHTIENBAN");
					this.OnTHANHTIENBANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOADONBAN_CHITIETHOADONBAN", Storage="_HOADONBAN", ThisKey="MAHDB", OtherKey="MAHDB", IsForeignKey=true)]
		public HOADONBAN HOADONBAN
		{
			get
			{
				return this._HOADONBAN.Entity;
			}
			set
			{
				HOADONBAN previousValue = this._HOADONBAN.Entity;
				if (((previousValue != value) 
							|| (this._HOADONBAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOADONBAN.Entity = null;
						previousValue.CHITIETHOADONBANs.Remove(this);
					}
					this._HOADONBAN.Entity = value;
					if ((value != null))
					{
						value.CHITIETHOADONBANs.Add(this);
						this._MAHDB = value.MAHDB;
					}
					else
					{
						this._MAHDB = default(string);
					}
					this.SendPropertyChanged("HOADONBAN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CHITIETHOADONBAN", Storage="_SANPHAM", ThisKey="MASP", OtherKey="MASP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.CHITIETHOADONBANs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.CHITIETHOADONBANs.Add(this);
						this._MASP = value.MASP;
					}
					else
					{
						this._MASP = default(string);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DANHMUCMANHINH")]
	public partial class DANHMUCMANHINH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MADMMH;
		
		private string _TENMANHINH;
		
		private EntitySet<PHANQUYEN> _PHANQUYENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMADMMHChanging(string value);
    partial void OnMADMMHChanged();
    partial void OnTENMANHINHChanging(string value);
    partial void OnTENMANHINHChanged();
    #endregion
		
		public DANHMUCMANHINH()
		{
			this._PHANQUYENs = new EntitySet<PHANQUYEN>(new Action<PHANQUYEN>(this.attach_PHANQUYENs), new Action<PHANQUYEN>(this.detach_PHANQUYENs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADMMH", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MADMMH
		{
			get
			{
				return this._MADMMH;
			}
			set
			{
				if ((this._MADMMH != value))
				{
					this.OnMADMMHChanging(value);
					this.SendPropertyChanging();
					this._MADMMH = value;
					this.SendPropertyChanged("MADMMH");
					this.OnMADMMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENMANHINH", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string TENMANHINH
		{
			get
			{
				return this._TENMANHINH;
			}
			set
			{
				if ((this._TENMANHINH != value))
				{
					this.OnTENMANHINHChanging(value);
					this.SendPropertyChanging();
					this._TENMANHINH = value;
					this.SendPropertyChanged("TENMANHINH");
					this.OnTENMANHINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DANHMUCMANHINH_PHANQUYEN", Storage="_PHANQUYENs", ThisKey="MADMMH", OtherKey="MADMMH")]
		public EntitySet<PHANQUYEN> PHANQUYENs
		{
			get
			{
				return this._PHANQUYENs;
			}
			set
			{
				this._PHANQUYENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHANQUYENs(PHANQUYEN entity)
		{
			this.SendPropertyChanging();
			entity.DANHMUCMANHINH = this;
		}
		
		private void detach_PHANQUYENs(PHANQUYEN entity)
		{
			this.SendPropertyChanging();
			entity.DANHMUCMANHINH = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DK_CTTB_CTTL")]
	public partial class DK_CTTB_CTTL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAKH;
		
		private string _MACT;
		
		private System.Nullable<System.DateTime> _NGAYDK;
		
		private System.Nullable<double> _DIEMTL_THUC;
		
		private string _TRANGTHAI;
		
		private EntityRef<CTTB_CTTL> _CTTB_CTTL;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAKHChanging(string value);
    partial void OnMAKHChanged();
    partial void OnMACTChanging(string value);
    partial void OnMACTChanged();
    partial void OnNGAYDKChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYDKChanged();
    partial void OnDIEMTL_THUCChanging(System.Nullable<double> value);
    partial void OnDIEMTL_THUCChanged();
    partial void OnTRANGTHAIChanging(string value);
    partial void OnTRANGTHAIChanged();
    #endregion
		
		public DK_CTTB_CTTL()
		{
			this._CTTB_CTTL = default(EntityRef<CTTB_CTTL>);
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKH", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAKH
		{
			get
			{
				return this._MAKH;
			}
			set
			{
				if ((this._MAKH != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKHChanging(value);
					this.SendPropertyChanging();
					this._MAKH = value;
					this.SendPropertyChanged("MAKH");
					this.OnMAKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACT", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MACT
		{
			get
			{
				return this._MACT;
			}
			set
			{
				if ((this._MACT != value))
				{
					if (this._CTTB_CTTL.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMACTChanging(value);
					this.SendPropertyChanging();
					this._MACT = value;
					this.SendPropertyChanged("MACT");
					this.OnMACTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYDK", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYDK
		{
			get
			{
				return this._NGAYDK;
			}
			set
			{
				if ((this._NGAYDK != value))
				{
					this.OnNGAYDKChanging(value);
					this.SendPropertyChanging();
					this._NGAYDK = value;
					this.SendPropertyChanged("NGAYDK");
					this.OnNGAYDKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIEMTL_THUC", DbType="Float")]
		public System.Nullable<double> DIEMTL_THUC
		{
			get
			{
				return this._DIEMTL_THUC;
			}
			set
			{
				if ((this._DIEMTL_THUC != value))
				{
					this.OnDIEMTL_THUCChanging(value);
					this.SendPropertyChanging();
					this._DIEMTL_THUC = value;
					this.SendPropertyChanged("DIEMTL_THUC");
					this.OnDIEMTL_THUCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRANGTHAI", DbType="NVarChar(210) NOT NULL", CanBeNull=false)]
		public string TRANGTHAI
		{
			get
			{
				return this._TRANGTHAI;
			}
			set
			{
				if ((this._TRANGTHAI != value))
				{
					this.OnTRANGTHAIChanging(value);
					this.SendPropertyChanging();
					this._TRANGTHAI = value;
					this.SendPropertyChanged("TRANGTHAI");
					this.OnTRANGTHAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CTTB_CTTL_DK_CTTB_CTTL", Storage="_CTTB_CTTL", ThisKey="MACT", OtherKey="MACT", IsForeignKey=true)]
		public CTTB_CTTL CTTB_CTTL
		{
			get
			{
				return this._CTTB_CTTL.Entity;
			}
			set
			{
				CTTB_CTTL previousValue = this._CTTB_CTTL.Entity;
				if (((previousValue != value) 
							|| (this._CTTB_CTTL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CTTB_CTTL.Entity = null;
						previousValue.DK_CTTB_CTTLs.Remove(this);
					}
					this._CTTB_CTTL.Entity = value;
					if ((value != null))
					{
						value.DK_CTTB_CTTLs.Add(this);
						this._MACT = value.MACT;
					}
					else
					{
						this._MACT = default(string);
					}
					this.SendPropertyChanged("CTTB_CTTL");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_DK_CTTB_CTTL", Storage="_KHACHHANG", ThisKey="MAKH", OtherKey="MAKH", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.DK_CTTB_CTTLs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.DK_CTTB_CTTLs.Add(this);
						this._MAKH = value.MAKH;
					}
					else
					{
						this._MAKH = default(string);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HANGSANXUAT")]
	public partial class HANGSANXUAT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAHSX;
		
		private string _TENHSX;
		
		private EntitySet<SANPHAM> _SANPHAMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAHSXChanging(string value);
    partial void OnMAHSXChanged();
    partial void OnTENHSXChanging(string value);
    partial void OnTENHSXChanged();
    #endregion
		
		public HANGSANXUAT()
		{
			this._SANPHAMs = new EntitySet<SANPHAM>(new Action<SANPHAM>(this.attach_SANPHAMs), new Action<SANPHAM>(this.detach_SANPHAMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHSX", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAHSX
		{
			get
			{
				return this._MAHSX;
			}
			set
			{
				if ((this._MAHSX != value))
				{
					this.OnMAHSXChanging(value);
					this.SendPropertyChanging();
					this._MAHSX = value;
					this.SendPropertyChanged("MAHSX");
					this.OnMAHSXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENHSX", DbType="NVarChar(500)")]
		public string TENHSX
		{
			get
			{
				return this._TENHSX;
			}
			set
			{
				if ((this._TENHSX != value))
				{
					this.OnTENHSXChanging(value);
					this.SendPropertyChanging();
					this._TENHSX = value;
					this.SendPropertyChanged("TENHSX");
					this.OnTENHSXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HANGSANXUAT_SANPHAM", Storage="_SANPHAMs", ThisKey="MAHSX", OtherKey="MAHSX")]
		public EntitySet<SANPHAM> SANPHAMs
		{
			get
			{
				return this._SANPHAMs;
			}
			set
			{
				this._SANPHAMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.HANGSANXUAT = this;
		}
		
		private void detach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.HANGSANXUAT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOADONBAN")]
	public partial class HOADONBAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAHDB;
		
		private string _MAKH;
		
		private string _MANV;
		
		private System.DateTime _NGAYLAPBAN;
		
		private double _VAT;
		
		private decimal _TONGTIENBAN;
		
		private EntitySet<CHITIETHOADONBAN> _CHITIETHOADONBANs;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAHDBChanging(string value);
    partial void OnMAHDBChanged();
    partial void OnMAKHChanging(string value);
    partial void OnMAKHChanged();
    partial void OnMANVChanging(string value);
    partial void OnMANVChanged();
    partial void OnNGAYLAPBANChanging(System.DateTime value);
    partial void OnNGAYLAPBANChanged();
    partial void OnVATChanging(double value);
    partial void OnVATChanged();
    partial void OnTONGTIENBANChanging(decimal value);
    partial void OnTONGTIENBANChanged();
    #endregion
		
		public HOADONBAN()
		{
			this._CHITIETHOADONBANs = new EntitySet<CHITIETHOADONBAN>(new Action<CHITIETHOADONBAN>(this.attach_CHITIETHOADONBANs), new Action<CHITIETHOADONBAN>(this.detach_CHITIETHOADONBANs));
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHDB", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAHDB
		{
			get
			{
				return this._MAHDB;
			}
			set
			{
				if ((this._MAHDB != value))
				{
					this.OnMAHDBChanging(value);
					this.SendPropertyChanging();
					this._MAHDB = value;
					this.SendPropertyChanged("MAHDB");
					this.OnMAHDBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKH", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MAKH
		{
			get
			{
				return this._MAKH;
			}
			set
			{
				if ((this._MAKH != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKHChanging(value);
					this.SendPropertyChanging();
					this._MAKH = value;
					this.SendPropertyChanged("MAKH");
					this.OnMAKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYLAPBAN", DbType="Date NOT NULL")]
		public System.DateTime NGAYLAPBAN
		{
			get
			{
				return this._NGAYLAPBAN;
			}
			set
			{
				if ((this._NGAYLAPBAN != value))
				{
					this.OnNGAYLAPBANChanging(value);
					this.SendPropertyChanging();
					this._NGAYLAPBAN = value;
					this.SendPropertyChanged("NGAYLAPBAN");
					this.OnNGAYLAPBANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VAT", DbType="Float NOT NULL")]
		public double VAT
		{
			get
			{
				return this._VAT;
			}
			set
			{
				if ((this._VAT != value))
				{
					this.OnVATChanging(value);
					this.SendPropertyChanging();
					this._VAT = value;
					this.SendPropertyChanged("VAT");
					this.OnVATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TONGTIENBAN", DbType="Decimal(18,0) NOT NULL")]
		public decimal TONGTIENBAN
		{
			get
			{
				return this._TONGTIENBAN;
			}
			set
			{
				if ((this._TONGTIENBAN != value))
				{
					this.OnTONGTIENBANChanging(value);
					this.SendPropertyChanging();
					this._TONGTIENBAN = value;
					this.SendPropertyChanged("TONGTIENBAN");
					this.OnTONGTIENBANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOADONBAN_CHITIETHOADONBAN", Storage="_CHITIETHOADONBANs", ThisKey="MAHDB", OtherKey="MAHDB")]
		public EntitySet<CHITIETHOADONBAN> CHITIETHOADONBANs
		{
			get
			{
				return this._CHITIETHOADONBANs;
			}
			set
			{
				this._CHITIETHOADONBANs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_HOADONBAN", Storage="_KHACHHANG", ThisKey="MAKH", OtherKey="MAKH", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.HOADONBANs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.HOADONBANs.Add(this);
						this._MAKH = value.MAKH;
					}
					else
					{
						this._MAKH = default(string);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_HOADONBAN", Storage="_NHANVIEN", ThisKey="MANV", OtherKey="MANV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.HOADONBANs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.HOADONBANs.Add(this);
						this._MANV = value.MANV;
					}
					else
					{
						this._MANV = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETHOADONBANs(CHITIETHOADONBAN entity)
		{
			this.SendPropertyChanging();
			entity.HOADONBAN = this;
		}
		
		private void detach_CHITIETHOADONBANs(CHITIETHOADONBAN entity)
		{
			this.SendPropertyChanging();
			entity.HOADONBAN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHACHHANG")]
	public partial class KHACHHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAKH;
		
		private string _MAQUANHUYEN;
		
		private string _HOTENKH;
		
		private string _LOAIKHACHHANG;
		
		private System.Nullable<System.DateTime> _NGAYSINHKH;
		
		private string _GIOITINHKH;
		
		private string _DIACHIKH;
		
		private string _SODIENTHOAIKH;
		
		private EntitySet<DK_CTTB_CTTL> _DK_CTTB_CTTLs;
		
		private EntitySet<HOADONBAN> _HOADONBANs;
		
		private EntitySet<PHIEUXUATHANG> _PHIEUXUATHANGs;
		
		private EntityRef<LOAIKHACHHANG> _LOAIKHACHHANG1;
		
		private EntityRef<QUANHUYEN> _QUANHUYEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAKHChanging(string value);
    partial void OnMAKHChanged();
    partial void OnMAQUANHUYENChanging(string value);
    partial void OnMAQUANHUYENChanged();
    partial void OnHOTENKHChanging(string value);
    partial void OnHOTENKHChanged();
    partial void OnLOAIKHACHHANGChanging(string value);
    partial void OnLOAIKHACHHANGChanged();
    partial void OnNGAYSINHKHChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYSINHKHChanged();
    partial void OnGIOITINHKHChanging(string value);
    partial void OnGIOITINHKHChanged();
    partial void OnDIACHIKHChanging(string value);
    partial void OnDIACHIKHChanged();
    partial void OnSODIENTHOAIKHChanging(string value);
    partial void OnSODIENTHOAIKHChanged();
    #endregion
		
		public KHACHHANG()
		{
			this._DK_CTTB_CTTLs = new EntitySet<DK_CTTB_CTTL>(new Action<DK_CTTB_CTTL>(this.attach_DK_CTTB_CTTLs), new Action<DK_CTTB_CTTL>(this.detach_DK_CTTB_CTTLs));
			this._HOADONBANs = new EntitySet<HOADONBAN>(new Action<HOADONBAN>(this.attach_HOADONBANs), new Action<HOADONBAN>(this.detach_HOADONBANs));
			this._PHIEUXUATHANGs = new EntitySet<PHIEUXUATHANG>(new Action<PHIEUXUATHANG>(this.attach_PHIEUXUATHANGs), new Action<PHIEUXUATHANG>(this.detach_PHIEUXUATHANGs));
			this._LOAIKHACHHANG1 = default(EntityRef<LOAIKHACHHANG>);
			this._QUANHUYEN = default(EntityRef<QUANHUYEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKH", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAKH
		{
			get
			{
				return this._MAKH;
			}
			set
			{
				if ((this._MAKH != value))
				{
					this.OnMAKHChanging(value);
					this.SendPropertyChanging();
					this._MAKH = value;
					this.SendPropertyChanged("MAKH");
					this.OnMAKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAQUANHUYEN", DbType="VarChar(10)")]
		public string MAQUANHUYEN
		{
			get
			{
				return this._MAQUANHUYEN;
			}
			set
			{
				if ((this._MAQUANHUYEN != value))
				{
					if (this._QUANHUYEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAQUANHUYENChanging(value);
					this.SendPropertyChanging();
					this._MAQUANHUYEN = value;
					this.SendPropertyChanged("MAQUANHUYEN");
					this.OnMAQUANHUYENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOTENKH", DbType="NVarChar(500)")]
		public string HOTENKH
		{
			get
			{
				return this._HOTENKH;
			}
			set
			{
				if ((this._HOTENKH != value))
				{
					this.OnHOTENKHChanging(value);
					this.SendPropertyChanging();
					this._HOTENKH = value;
					this.SendPropertyChanged("HOTENKH");
					this.OnHOTENKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOAIKHACHHANG", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string LOAIKHACHHANG
		{
			get
			{
				return this._LOAIKHACHHANG;
			}
			set
			{
				if ((this._LOAIKHACHHANG != value))
				{
					if (this._LOAIKHACHHANG1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLOAIKHACHHANGChanging(value);
					this.SendPropertyChanging();
					this._LOAIKHACHHANG = value;
					this.SendPropertyChanged("LOAIKHACHHANG");
					this.OnLOAIKHACHHANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYSINHKH", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYSINHKH
		{
			get
			{
				return this._NGAYSINHKH;
			}
			set
			{
				if ((this._NGAYSINHKH != value))
				{
					this.OnNGAYSINHKHChanging(value);
					this.SendPropertyChanging();
					this._NGAYSINHKH = value;
					this.SendPropertyChanged("NGAYSINHKH");
					this.OnNGAYSINHKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIOITINHKH", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string GIOITINHKH
		{
			get
			{
				return this._GIOITINHKH;
			}
			set
			{
				if ((this._GIOITINHKH != value))
				{
					this.OnGIOITINHKHChanging(value);
					this.SendPropertyChanging();
					this._GIOITINHKH = value;
					this.SendPropertyChanged("GIOITINHKH");
					this.OnGIOITINHKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHIKH", DbType="NVarChar(500)")]
		public string DIACHIKH
		{
			get
			{
				return this._DIACHIKH;
			}
			set
			{
				if ((this._DIACHIKH != value))
				{
					this.OnDIACHIKHChanging(value);
					this.SendPropertyChanging();
					this._DIACHIKH = value;
					this.SendPropertyChanged("DIACHIKH");
					this.OnDIACHIKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SODIENTHOAIKH", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string SODIENTHOAIKH
		{
			get
			{
				return this._SODIENTHOAIKH;
			}
			set
			{
				if ((this._SODIENTHOAIKH != value))
				{
					this.OnSODIENTHOAIKHChanging(value);
					this.SendPropertyChanging();
					this._SODIENTHOAIKH = value;
					this.SendPropertyChanged("SODIENTHOAIKH");
					this.OnSODIENTHOAIKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_DK_CTTB_CTTL", Storage="_DK_CTTB_CTTLs", ThisKey="MAKH", OtherKey="MAKH")]
		public EntitySet<DK_CTTB_CTTL> DK_CTTB_CTTLs
		{
			get
			{
				return this._DK_CTTB_CTTLs;
			}
			set
			{
				this._DK_CTTB_CTTLs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_HOADONBAN", Storage="_HOADONBANs", ThisKey="MAKH", OtherKey="MAKH")]
		public EntitySet<HOADONBAN> HOADONBANs
		{
			get
			{
				return this._HOADONBANs;
			}
			set
			{
				this._HOADONBANs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_PHIEUXUATHANG", Storage="_PHIEUXUATHANGs", ThisKey="MAKH", OtherKey="MAKH")]
		public EntitySet<PHIEUXUATHANG> PHIEUXUATHANGs
		{
			get
			{
				return this._PHIEUXUATHANGs;
			}
			set
			{
				this._PHIEUXUATHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAIKHACHHANG_KHACHHANG", Storage="_LOAIKHACHHANG1", ThisKey="LOAIKHACHHANG", OtherKey="LOAIKHACHHANG1", IsForeignKey=true)]
		public LOAIKHACHHANG LOAIKHACHHANG1
		{
			get
			{
				return this._LOAIKHACHHANG1.Entity;
			}
			set
			{
				LOAIKHACHHANG previousValue = this._LOAIKHACHHANG1.Entity;
				if (((previousValue != value) 
							|| (this._LOAIKHACHHANG1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAIKHACHHANG1.Entity = null;
						previousValue.KHACHHANGs.Remove(this);
					}
					this._LOAIKHACHHANG1.Entity = value;
					if ((value != null))
					{
						value.KHACHHANGs.Add(this);
						this._LOAIKHACHHANG = value.LOAIKHACHHANG1;
					}
					else
					{
						this._LOAIKHACHHANG = default(string);
					}
					this.SendPropertyChanged("LOAIKHACHHANG1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QUANHUYEN_KHACHHANG", Storage="_QUANHUYEN", ThisKey="MAQUANHUYEN", OtherKey="MAQUANHUYEN", IsForeignKey=true)]
		public QUANHUYEN QUANHUYEN
		{
			get
			{
				return this._QUANHUYEN.Entity;
			}
			set
			{
				QUANHUYEN previousValue = this._QUANHUYEN.Entity;
				if (((previousValue != value) 
							|| (this._QUANHUYEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QUANHUYEN.Entity = null;
						previousValue.KHACHHANGs.Remove(this);
					}
					this._QUANHUYEN.Entity = value;
					if ((value != null))
					{
						value.KHACHHANGs.Add(this);
						this._MAQUANHUYEN = value.MAQUANHUYEN;
					}
					else
					{
						this._MAQUANHUYEN = default(string);
					}
					this.SendPropertyChanged("QUANHUYEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DK_CTTB_CTTLs(DK_CTTB_CTTL entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_DK_CTTB_CTTLs(DK_CTTB_CTTL entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
		
		private void attach_HOADONBANs(HOADONBAN entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_HOADONBANs(HOADONBAN entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
		
		private void attach_PHIEUXUATHANGs(PHIEUXUATHANG entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_PHIEUXUATHANGs(PHIEUXUATHANG entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAIKHACHHANG")]
	public partial class LOAIKHACHHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _LOAIKHACHHANG1;
		
		private string _TENLOAIKH;
		
		private EntitySet<KHACHHANG> _KHACHHANGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLOAIKHACHHANG1Changing(string value);
    partial void OnLOAIKHACHHANG1Changed();
    partial void OnTENLOAIKHChanging(string value);
    partial void OnTENLOAIKHChanged();
    #endregion
		
		public LOAIKHACHHANG()
		{
			this._KHACHHANGs = new EntitySet<KHACHHANG>(new Action<KHACHHANG>(this.attach_KHACHHANGs), new Action<KHACHHANG>(this.detach_KHACHHANGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="LOAIKHACHHANG", Storage="_LOAIKHACHHANG1", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LOAIKHACHHANG1
		{
			get
			{
				return this._LOAIKHACHHANG1;
			}
			set
			{
				if ((this._LOAIKHACHHANG1 != value))
				{
					this.OnLOAIKHACHHANG1Changing(value);
					this.SendPropertyChanging();
					this._LOAIKHACHHANG1 = value;
					this.SendPropertyChanged("LOAIKHACHHANG1");
					this.OnLOAIKHACHHANG1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENLOAIKH", DbType="NVarChar(100)")]
		public string TENLOAIKH
		{
			get
			{
				return this._TENLOAIKH;
			}
			set
			{
				if ((this._TENLOAIKH != value))
				{
					this.OnTENLOAIKHChanging(value);
					this.SendPropertyChanging();
					this._TENLOAIKH = value;
					this.SendPropertyChanged("TENLOAIKH");
					this.OnTENLOAIKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAIKHACHHANG_KHACHHANG", Storage="_KHACHHANGs", ThisKey="LOAIKHACHHANG1", OtherKey="LOAIKHACHHANG")]
		public EntitySet<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this._KHACHHANGs;
			}
			set
			{
				this._KHACHHANGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KHACHHANGs(KHACHHANG entity)
		{
			this.SendPropertyChanging();
			entity.LOAIKHACHHANG1 = this;
		}
		
		private void detach_KHACHHANGs(KHACHHANG entity)
		{
			this.SendPropertyChanging();
			entity.LOAIKHACHHANG1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAISANPHAM")]
	public partial class LOAISANPHAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MALOAISANPHAM;
		
		private string _MAPAL;
		
		private string _TENLOAISANPHAM;
		
		private EntitySet<SANPHAM> _SANPHAMs;
		
		private EntityRef<PAL> _PAL;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMALOAISANPHAMChanging(string value);
    partial void OnMALOAISANPHAMChanged();
    partial void OnMAPALChanging(string value);
    partial void OnMAPALChanged();
    partial void OnTENLOAISANPHAMChanging(string value);
    partial void OnTENLOAISANPHAMChanged();
    #endregion
		
		public LOAISANPHAM()
		{
			this._SANPHAMs = new EntitySet<SANPHAM>(new Action<SANPHAM>(this.attach_SANPHAMs), new Action<SANPHAM>(this.detach_SANPHAMs));
			this._PAL = default(EntityRef<PAL>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAISANPHAM", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MALOAISANPHAM
		{
			get
			{
				return this._MALOAISANPHAM;
			}
			set
			{
				if ((this._MALOAISANPHAM != value))
				{
					this.OnMALOAISANPHAMChanging(value);
					this.SendPropertyChanging();
					this._MALOAISANPHAM = value;
					this.SendPropertyChanged("MALOAISANPHAM");
					this.OnMALOAISANPHAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPAL", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MAPAL
		{
			get
			{
				return this._MAPAL;
			}
			set
			{
				if ((this._MAPAL != value))
				{
					if (this._PAL.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPALChanging(value);
					this.SendPropertyChanging();
					this._MAPAL = value;
					this.SendPropertyChanged("MAPAL");
					this.OnMAPALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENLOAISANPHAM", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string TENLOAISANPHAM
		{
			get
			{
				return this._TENLOAISANPHAM;
			}
			set
			{
				if ((this._TENLOAISANPHAM != value))
				{
					this.OnTENLOAISANPHAMChanging(value);
					this.SendPropertyChanging();
					this._TENLOAISANPHAM = value;
					this.SendPropertyChanged("TENLOAISANPHAM");
					this.OnTENLOAISANPHAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAISANPHAM_SANPHAM", Storage="_SANPHAMs", ThisKey="MALOAISANPHAM", OtherKey="MALOAISANPHAM")]
		public EntitySet<SANPHAM> SANPHAMs
		{
			get
			{
				return this._SANPHAMs;
			}
			set
			{
				this._SANPHAMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PAL_LOAISANPHAM", Storage="_PAL", ThisKey="MAPAL", OtherKey="MAPAL", IsForeignKey=true)]
		public PAL PAL
		{
			get
			{
				return this._PAL.Entity;
			}
			set
			{
				PAL previousValue = this._PAL.Entity;
				if (((previousValue != value) 
							|| (this._PAL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PAL.Entity = null;
						previousValue.LOAISANPHAMs.Remove(this);
					}
					this._PAL.Entity = value;
					if ((value != null))
					{
						value.LOAISANPHAMs.Add(this);
						this._MAPAL = value.MAPAL;
					}
					else
					{
						this._MAPAL = default(string);
					}
					this.SendPropertyChanged("PAL");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.LOAISANPHAM = this;
		}
		
		private void detach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.LOAISANPHAM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHACUNGCAP")]
	public partial class NHACUNGCAP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MANCC;
		
		private string _MAQUANHUYEN;
		
		private string _TENNHACUNGCAP;
		
		private string _DIACHI;
		
		private string _SDT;
		
		private EntitySet<PHIEUNHAPHANG> _PHIEUNHAPHANGs;
		
		private EntityRef<QUANHUYEN> _QUANHUYEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANCCChanging(string value);
    partial void OnMANCCChanged();
    partial void OnMAQUANHUYENChanging(string value);
    partial void OnMAQUANHUYENChanged();
    partial void OnTENNHACUNGCAPChanging(string value);
    partial void OnTENNHACUNGCAPChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    #endregion
		
		public NHACUNGCAP()
		{
			this._PHIEUNHAPHANGs = new EntitySet<PHIEUNHAPHANG>(new Action<PHIEUNHAPHANG>(this.attach_PHIEUNHAPHANGs), new Action<PHIEUNHAPHANG>(this.detach_PHIEUNHAPHANGs));
			this._QUANHUYEN = default(EntityRef<QUANHUYEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANCC", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MANCC
		{
			get
			{
				return this._MANCC;
			}
			set
			{
				if ((this._MANCC != value))
				{
					this.OnMANCCChanging(value);
					this.SendPropertyChanging();
					this._MANCC = value;
					this.SendPropertyChanged("MANCC");
					this.OnMANCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAQUANHUYEN", DbType="VarChar(10)")]
		public string MAQUANHUYEN
		{
			get
			{
				return this._MAQUANHUYEN;
			}
			set
			{
				if ((this._MAQUANHUYEN != value))
				{
					if (this._QUANHUYEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAQUANHUYENChanging(value);
					this.SendPropertyChanging();
					this._MAQUANHUYEN = value;
					this.SendPropertyChanged("MAQUANHUYEN");
					this.OnMAQUANHUYENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENNHACUNGCAP", DbType="NVarChar(500)")]
		public string TENNHACUNGCAP
		{
			get
			{
				return this._TENNHACUNGCAP;
			}
			set
			{
				if ((this._TENNHACUNGCAP != value))
				{
					this.OnTENNHACUNGCAPChanging(value);
					this.SendPropertyChanging();
					this._TENNHACUNGCAP = value;
					this.SendPropertyChanged("TENNHACUNGCAP");
					this.OnTENNHACUNGCAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(500)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(15)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHACUNGCAP_PHIEUNHAPHANG", Storage="_PHIEUNHAPHANGs", ThisKey="MANCC", OtherKey="MANCC")]
		public EntitySet<PHIEUNHAPHANG> PHIEUNHAPHANGs
		{
			get
			{
				return this._PHIEUNHAPHANGs;
			}
			set
			{
				this._PHIEUNHAPHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QUANHUYEN_NHACUNGCAP", Storage="_QUANHUYEN", ThisKey="MAQUANHUYEN", OtherKey="MAQUANHUYEN", IsForeignKey=true)]
		public QUANHUYEN QUANHUYEN
		{
			get
			{
				return this._QUANHUYEN.Entity;
			}
			set
			{
				QUANHUYEN previousValue = this._QUANHUYEN.Entity;
				if (((previousValue != value) 
							|| (this._QUANHUYEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QUANHUYEN.Entity = null;
						previousValue.NHACUNGCAPs.Remove(this);
					}
					this._QUANHUYEN.Entity = value;
					if ((value != null))
					{
						value.NHACUNGCAPs.Add(this);
						this._MAQUANHUYEN = value.MAQUANHUYEN;
					}
					else
					{
						this._MAQUANHUYEN = default(string);
					}
					this.SendPropertyChanged("QUANHUYEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHIEUNHAPHANGs(PHIEUNHAPHANG entity)
		{
			this.SendPropertyChanging();
			entity.NHACUNGCAP = this;
		}
		
		private void detach_PHIEUNHAPHANGs(PHIEUNHAPHANG entity)
		{
			this.SendPropertyChanging();
			entity.NHACUNGCAP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHANVIEN")]
	public partial class NHANVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MANV;
		
		private string _MANHOMNV;
		
		private string _TENDANGNHAP;
		
		private string _MATKHAU;
		
		private string _HOTENNV;
		
		private string _GIOITINHNV;
		
		private System.Nullable<System.DateTime> _NGAYSINHNV;
		
		private string _DIACHINV;
		
		private string _SODIENTHOAINV;
		
		private string _CHUNGMINHTHU;
		
		private System.DateTime _NGAYBATDAULAMVIEC;
		
		private System.Nullable<System.DateTime> _NGAYKETTHUCLAMVIEC;
		
		private string _TRINHDOHOCVAN;
		
		private decimal _MUCLUONGCOBAN;
		
		private EntitySet<BANGLUONG> _BANGLUONGs;
		
		private EntitySet<CHAMCONG> _CHAMCONGs;
		
		private EntitySet<CHITIETBACLUONG> _CHITIETBACLUONGs;
		
		private EntitySet<HOADONBAN> _HOADONBANs;
		
		private EntityRef<NHOMNHANVIEN> _NHOMNHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANVChanging(string value);
    partial void OnMANVChanged();
    partial void OnMANHOMNVChanging(string value);
    partial void OnMANHOMNVChanged();
    partial void OnTENDANGNHAPChanging(string value);
    partial void OnTENDANGNHAPChanged();
    partial void OnMATKHAUChanging(string value);
    partial void OnMATKHAUChanged();
    partial void OnHOTENNVChanging(string value);
    partial void OnHOTENNVChanged();
    partial void OnGIOITINHNVChanging(string value);
    partial void OnGIOITINHNVChanged();
    partial void OnNGAYSINHNVChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYSINHNVChanged();
    partial void OnDIACHINVChanging(string value);
    partial void OnDIACHINVChanged();
    partial void OnSODIENTHOAINVChanging(string value);
    partial void OnSODIENTHOAINVChanged();
    partial void OnCHUNGMINHTHUChanging(string value);
    partial void OnCHUNGMINHTHUChanged();
    partial void OnNGAYBATDAULAMVIECChanging(System.DateTime value);
    partial void OnNGAYBATDAULAMVIECChanged();
    partial void OnNGAYKETTHUCLAMVIECChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYKETTHUCLAMVIECChanged();
    partial void OnTRINHDOHOCVANChanging(string value);
    partial void OnTRINHDOHOCVANChanged();
    partial void OnMUCLUONGCOBANChanging(decimal value);
    partial void OnMUCLUONGCOBANChanged();
    #endregion
		
		public NHANVIEN()
		{
			this._BANGLUONGs = new EntitySet<BANGLUONG>(new Action<BANGLUONG>(this.attach_BANGLUONGs), new Action<BANGLUONG>(this.detach_BANGLUONGs));
			this._CHAMCONGs = new EntitySet<CHAMCONG>(new Action<CHAMCONG>(this.attach_CHAMCONGs), new Action<CHAMCONG>(this.detach_CHAMCONGs));
			this._CHITIETBACLUONGs = new EntitySet<CHITIETBACLUONG>(new Action<CHITIETBACLUONG>(this.attach_CHITIETBACLUONGs), new Action<CHITIETBACLUONG>(this.detach_CHITIETBACLUONGs));
			this._HOADONBANs = new EntitySet<HOADONBAN>(new Action<HOADONBAN>(this.attach_HOADONBANs), new Action<HOADONBAN>(this.detach_HOADONBANs));
			this._NHOMNHANVIEN = default(EntityRef<NHOMNHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANHOMNV", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MANHOMNV
		{
			get
			{
				return this._MANHOMNV;
			}
			set
			{
				if ((this._MANHOMNV != value))
				{
					if (this._NHOMNHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANHOMNVChanging(value);
					this.SendPropertyChanging();
					this._MANHOMNV = value;
					this.SendPropertyChanged("MANHOMNV");
					this.OnMANHOMNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENDANGNHAP", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string TENDANGNHAP
		{
			get
			{
				return this._TENDANGNHAP;
			}
			set
			{
				if ((this._TENDANGNHAP != value))
				{
					this.OnTENDANGNHAPChanging(value);
					this.SendPropertyChanging();
					this._TENDANGNHAP = value;
					this.SendPropertyChanged("TENDANGNHAP");
					this.OnTENDANGNHAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATKHAU", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string MATKHAU
		{
			get
			{
				return this._MATKHAU;
			}
			set
			{
				if ((this._MATKHAU != value))
				{
					this.OnMATKHAUChanging(value);
					this.SendPropertyChanging();
					this._MATKHAU = value;
					this.SendPropertyChanged("MATKHAU");
					this.OnMATKHAUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOTENNV", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string HOTENNV
		{
			get
			{
				return this._HOTENNV;
			}
			set
			{
				if ((this._HOTENNV != value))
				{
					this.OnHOTENNVChanging(value);
					this.SendPropertyChanging();
					this._HOTENNV = value;
					this.SendPropertyChanged("HOTENNV");
					this.OnHOTENNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIOITINHNV", DbType="NVarChar(50)")]
		public string GIOITINHNV
		{
			get
			{
				return this._GIOITINHNV;
			}
			set
			{
				if ((this._GIOITINHNV != value))
				{
					this.OnGIOITINHNVChanging(value);
					this.SendPropertyChanging();
					this._GIOITINHNV = value;
					this.SendPropertyChanged("GIOITINHNV");
					this.OnGIOITINHNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYSINHNV", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYSINHNV
		{
			get
			{
				return this._NGAYSINHNV;
			}
			set
			{
				if ((this._NGAYSINHNV != value))
				{
					this.OnNGAYSINHNVChanging(value);
					this.SendPropertyChanging();
					this._NGAYSINHNV = value;
					this.SendPropertyChanged("NGAYSINHNV");
					this.OnNGAYSINHNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHINV", DbType="NVarChar(500)")]
		public string DIACHINV
		{
			get
			{
				return this._DIACHINV;
			}
			set
			{
				if ((this._DIACHINV != value))
				{
					this.OnDIACHINVChanging(value);
					this.SendPropertyChanging();
					this._DIACHINV = value;
					this.SendPropertyChanged("DIACHINV");
					this.OnDIACHINVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SODIENTHOAINV", DbType="VarChar(15)")]
		public string SODIENTHOAINV
		{
			get
			{
				return this._SODIENTHOAINV;
			}
			set
			{
				if ((this._SODIENTHOAINV != value))
				{
					this.OnSODIENTHOAINVChanging(value);
					this.SendPropertyChanging();
					this._SODIENTHOAINV = value;
					this.SendPropertyChanged("SODIENTHOAINV");
					this.OnSODIENTHOAINVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHUNGMINHTHU", DbType="VarChar(10)")]
		public string CHUNGMINHTHU
		{
			get
			{
				return this._CHUNGMINHTHU;
			}
			set
			{
				if ((this._CHUNGMINHTHU != value))
				{
					this.OnCHUNGMINHTHUChanging(value);
					this.SendPropertyChanging();
					this._CHUNGMINHTHU = value;
					this.SendPropertyChanged("CHUNGMINHTHU");
					this.OnCHUNGMINHTHUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYBATDAULAMVIEC", DbType="DateTime NOT NULL")]
		public System.DateTime NGAYBATDAULAMVIEC
		{
			get
			{
				return this._NGAYBATDAULAMVIEC;
			}
			set
			{
				if ((this._NGAYBATDAULAMVIEC != value))
				{
					this.OnNGAYBATDAULAMVIECChanging(value);
					this.SendPropertyChanging();
					this._NGAYBATDAULAMVIEC = value;
					this.SendPropertyChanged("NGAYBATDAULAMVIEC");
					this.OnNGAYBATDAULAMVIECChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYKETTHUCLAMVIEC", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYKETTHUCLAMVIEC
		{
			get
			{
				return this._NGAYKETTHUCLAMVIEC;
			}
			set
			{
				if ((this._NGAYKETTHUCLAMVIEC != value))
				{
					this.OnNGAYKETTHUCLAMVIECChanging(value);
					this.SendPropertyChanging();
					this._NGAYKETTHUCLAMVIEC = value;
					this.SendPropertyChanged("NGAYKETTHUCLAMVIEC");
					this.OnNGAYKETTHUCLAMVIECChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRINHDOHOCVAN", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string TRINHDOHOCVAN
		{
			get
			{
				return this._TRINHDOHOCVAN;
			}
			set
			{
				if ((this._TRINHDOHOCVAN != value))
				{
					this.OnTRINHDOHOCVANChanging(value);
					this.SendPropertyChanging();
					this._TRINHDOHOCVAN = value;
					this.SendPropertyChanged("TRINHDOHOCVAN");
					this.OnTRINHDOHOCVANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MUCLUONGCOBAN", DbType="Decimal(18,0) NOT NULL")]
		public decimal MUCLUONGCOBAN
		{
			get
			{
				return this._MUCLUONGCOBAN;
			}
			set
			{
				if ((this._MUCLUONGCOBAN != value))
				{
					this.OnMUCLUONGCOBANChanging(value);
					this.SendPropertyChanging();
					this._MUCLUONGCOBAN = value;
					this.SendPropertyChanged("MUCLUONGCOBAN");
					this.OnMUCLUONGCOBANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_BANGLUONG", Storage="_BANGLUONGs", ThisKey="MANV", OtherKey="MANV")]
		public EntitySet<BANGLUONG> BANGLUONGs
		{
			get
			{
				return this._BANGLUONGs;
			}
			set
			{
				this._BANGLUONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_CHAMCONG", Storage="_CHAMCONGs", ThisKey="MANV", OtherKey="MANV")]
		public EntitySet<CHAMCONG> CHAMCONGs
		{
			get
			{
				return this._CHAMCONGs;
			}
			set
			{
				this._CHAMCONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_CHITIETBACLUONG", Storage="_CHITIETBACLUONGs", ThisKey="MANV", OtherKey="MANV")]
		public EntitySet<CHITIETBACLUONG> CHITIETBACLUONGs
		{
			get
			{
				return this._CHITIETBACLUONGs;
			}
			set
			{
				this._CHITIETBACLUONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_HOADONBAN", Storage="_HOADONBANs", ThisKey="MANV", OtherKey="MANV")]
		public EntitySet<HOADONBAN> HOADONBANs
		{
			get
			{
				return this._HOADONBANs;
			}
			set
			{
				this._HOADONBANs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHOMNHANVIEN_NHANVIEN", Storage="_NHOMNHANVIEN", ThisKey="MANHOMNV", OtherKey="MANHOMNV", IsForeignKey=true)]
		public NHOMNHANVIEN NHOMNHANVIEN
		{
			get
			{
				return this._NHOMNHANVIEN.Entity;
			}
			set
			{
				NHOMNHANVIEN previousValue = this._NHOMNHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHOMNHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHOMNHANVIEN.Entity = null;
						previousValue.NHANVIENs.Remove(this);
					}
					this._NHOMNHANVIEN.Entity = value;
					if ((value != null))
					{
						value.NHANVIENs.Add(this);
						this._MANHOMNV = value.MANHOMNV;
					}
					else
					{
						this._MANHOMNV = default(string);
					}
					this.SendPropertyChanged("NHOMNHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BANGLUONGs(BANGLUONG entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_BANGLUONGs(BANGLUONG entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_CHAMCONGs(CHAMCONG entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_CHAMCONGs(CHAMCONG entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_CHITIETBACLUONGs(CHITIETBACLUONG entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_CHITIETBACLUONGs(CHITIETBACLUONG entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_HOADONBANs(HOADONBAN entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_HOADONBANs(HOADONBAN entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHOMNHANVIEN")]
	public partial class NHOMNHANVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MANHOMNV;
		
		private string _TENNHOM;
		
		private EntitySet<NHANVIEN> _NHANVIENs;
		
		private EntitySet<PHANQUYEN> _PHANQUYENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANHOMNVChanging(string value);
    partial void OnMANHOMNVChanged();
    partial void OnTENNHOMChanging(string value);
    partial void OnTENNHOMChanged();
    #endregion
		
		public NHOMNHANVIEN()
		{
			this._NHANVIENs = new EntitySet<NHANVIEN>(new Action<NHANVIEN>(this.attach_NHANVIENs), new Action<NHANVIEN>(this.detach_NHANVIENs));
			this._PHANQUYENs = new EntitySet<PHANQUYEN>(new Action<PHANQUYEN>(this.attach_PHANQUYENs), new Action<PHANQUYEN>(this.detach_PHANQUYENs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANHOMNV", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MANHOMNV
		{
			get
			{
				return this._MANHOMNV;
			}
			set
			{
				if ((this._MANHOMNV != value))
				{
					this.OnMANHOMNVChanging(value);
					this.SendPropertyChanging();
					this._MANHOMNV = value;
					this.SendPropertyChanged("MANHOMNV");
					this.OnMANHOMNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENNHOM", DbType="NVarChar(500)")]
		public string TENNHOM
		{
			get
			{
				return this._TENNHOM;
			}
			set
			{
				if ((this._TENNHOM != value))
				{
					this.OnTENNHOMChanging(value);
					this.SendPropertyChanging();
					this._TENNHOM = value;
					this.SendPropertyChanged("TENNHOM");
					this.OnTENNHOMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHOMNHANVIEN_NHANVIEN", Storage="_NHANVIENs", ThisKey="MANHOMNV", OtherKey="MANHOMNV")]
		public EntitySet<NHANVIEN> NHANVIENs
		{
			get
			{
				return this._NHANVIENs;
			}
			set
			{
				this._NHANVIENs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHOMNHANVIEN_PHANQUYEN", Storage="_PHANQUYENs", ThisKey="MANHOMNV", OtherKey="MANHOMNV")]
		public EntitySet<PHANQUYEN> PHANQUYENs
		{
			get
			{
				return this._PHANQUYENs;
			}
			set
			{
				this._PHANQUYENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.NHOMNHANVIEN = this;
		}
		
		private void detach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.NHOMNHANVIEN = null;
		}
		
		private void attach_PHANQUYENs(PHANQUYEN entity)
		{
			this.SendPropertyChanging();
			entity.NHOMNHANVIEN = this;
		}
		
		private void detach_PHANQUYENs(PHANQUYEN entity)
		{
			this.SendPropertyChanging();
			entity.NHOMNHANVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PAL")]
	public partial class PAL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAPAL;
		
		private string _TENPAL;
		
		private EntitySet<LOAISANPHAM> _LOAISANPHAMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPALChanging(string value);
    partial void OnMAPALChanged();
    partial void OnTENPALChanging(string value);
    partial void OnTENPALChanged();
    #endregion
		
		public PAL()
		{
			this._LOAISANPHAMs = new EntitySet<LOAISANPHAM>(new Action<LOAISANPHAM>(this.attach_LOAISANPHAMs), new Action<LOAISANPHAM>(this.detach_LOAISANPHAMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPAL", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAPAL
		{
			get
			{
				return this._MAPAL;
			}
			set
			{
				if ((this._MAPAL != value))
				{
					this.OnMAPALChanging(value);
					this.SendPropertyChanging();
					this._MAPAL = value;
					this.SendPropertyChanged("MAPAL");
					this.OnMAPALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENPAL", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string TENPAL
		{
			get
			{
				return this._TENPAL;
			}
			set
			{
				if ((this._TENPAL != value))
				{
					this.OnTENPALChanging(value);
					this.SendPropertyChanging();
					this._TENPAL = value;
					this.SendPropertyChanged("TENPAL");
					this.OnTENPALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PAL_LOAISANPHAM", Storage="_LOAISANPHAMs", ThisKey="MAPAL", OtherKey="MAPAL")]
		public EntitySet<LOAISANPHAM> LOAISANPHAMs
		{
			get
			{
				return this._LOAISANPHAMs;
			}
			set
			{
				this._LOAISANPHAMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LOAISANPHAMs(LOAISANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.PAL = this;
		}
		
		private void detach_LOAISANPHAMs(LOAISANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.PAL = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHANQUYEN")]
	public partial class PHANQUYEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MANHOMNV;
		
		private string _MADMMH;
		
		private System.Nullable<bool> _COQUYEN;
		
		private EntityRef<NHOMNHANVIEN> _NHOMNHANVIEN;
		
		private EntityRef<DANHMUCMANHINH> _DANHMUCMANHINH;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANHOMNVChanging(string value);
    partial void OnMANHOMNVChanged();
    partial void OnMADMMHChanging(string value);
    partial void OnMADMMHChanged();
    partial void OnCOQUYENChanging(System.Nullable<bool> value);
    partial void OnCOQUYENChanged();
    #endregion
		
		public PHANQUYEN()
		{
			this._NHOMNHANVIEN = default(EntityRef<NHOMNHANVIEN>);
			this._DANHMUCMANHINH = default(EntityRef<DANHMUCMANHINH>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANHOMNV", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MANHOMNV
		{
			get
			{
				return this._MANHOMNV;
			}
			set
			{
				if ((this._MANHOMNV != value))
				{
					if (this._NHOMNHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANHOMNVChanging(value);
					this.SendPropertyChanging();
					this._MANHOMNV = value;
					this.SendPropertyChanged("MANHOMNV");
					this.OnMANHOMNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADMMH", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MADMMH
		{
			get
			{
				return this._MADMMH;
			}
			set
			{
				if ((this._MADMMH != value))
				{
					if (this._DANHMUCMANHINH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMADMMHChanging(value);
					this.SendPropertyChanging();
					this._MADMMH = value;
					this.SendPropertyChanged("MADMMH");
					this.OnMADMMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COQUYEN", DbType="Bit")]
		public System.Nullable<bool> COQUYEN
		{
			get
			{
				return this._COQUYEN;
			}
			set
			{
				if ((this._COQUYEN != value))
				{
					this.OnCOQUYENChanging(value);
					this.SendPropertyChanging();
					this._COQUYEN = value;
					this.SendPropertyChanged("COQUYEN");
					this.OnCOQUYENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHOMNHANVIEN_PHANQUYEN", Storage="_NHOMNHANVIEN", ThisKey="MANHOMNV", OtherKey="MANHOMNV", IsForeignKey=true)]
		public NHOMNHANVIEN NHOMNHANVIEN
		{
			get
			{
				return this._NHOMNHANVIEN.Entity;
			}
			set
			{
				NHOMNHANVIEN previousValue = this._NHOMNHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHOMNHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHOMNHANVIEN.Entity = null;
						previousValue.PHANQUYENs.Remove(this);
					}
					this._NHOMNHANVIEN.Entity = value;
					if ((value != null))
					{
						value.PHANQUYENs.Add(this);
						this._MANHOMNV = value.MANHOMNV;
					}
					else
					{
						this._MANHOMNV = default(string);
					}
					this.SendPropertyChanged("NHOMNHANVIEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DANHMUCMANHINH_PHANQUYEN", Storage="_DANHMUCMANHINH", ThisKey="MADMMH", OtherKey="MADMMH", IsForeignKey=true)]
		public DANHMUCMANHINH DANHMUCMANHINH
		{
			get
			{
				return this._DANHMUCMANHINH.Entity;
			}
			set
			{
				DANHMUCMANHINH previousValue = this._DANHMUCMANHINH.Entity;
				if (((previousValue != value) 
							|| (this._DANHMUCMANHINH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DANHMUCMANHINH.Entity = null;
						previousValue.PHANQUYENs.Remove(this);
					}
					this._DANHMUCMANHINH.Entity = value;
					if ((value != null))
					{
						value.PHANQUYENs.Add(this);
						this._MADMMH = value.MADMMH;
					}
					else
					{
						this._MADMMH = default(string);
					}
					this.SendPropertyChanged("DANHMUCMANHINH");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHIEUNHAPHANG")]
	public partial class PHIEUNHAPHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAPN;
		
		private string _MANCC;
		
		private System.DateTime _NGAYNHAP;
		
		private string _GHICHUN;
		
		private System.Nullable<bool> _TRANGTHAI;
		
		private System.Nullable<decimal> _TONGTIEN;
		
		private EntitySet<CHITIETPHIEUNHAP> _CHITIETPHIEUNHAPs;
		
		private EntityRef<NHACUNGCAP> _NHACUNGCAP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPNChanging(string value);
    partial void OnMAPNChanged();
    partial void OnMANCCChanging(string value);
    partial void OnMANCCChanged();
    partial void OnNGAYNHAPChanging(System.DateTime value);
    partial void OnNGAYNHAPChanged();
    partial void OnGHICHUNChanging(string value);
    partial void OnGHICHUNChanged();
    partial void OnTRANGTHAIChanging(System.Nullable<bool> value);
    partial void OnTRANGTHAIChanged();
    partial void OnTONGTIENChanging(System.Nullable<decimal> value);
    partial void OnTONGTIENChanged();
    #endregion
		
		public PHIEUNHAPHANG()
		{
			this._CHITIETPHIEUNHAPs = new EntitySet<CHITIETPHIEUNHAP>(new Action<CHITIETPHIEUNHAP>(this.attach_CHITIETPHIEUNHAPs), new Action<CHITIETPHIEUNHAP>(this.detach_CHITIETPHIEUNHAPs));
			this._NHACUNGCAP = default(EntityRef<NHACUNGCAP>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPN", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAPN
		{
			get
			{
				return this._MAPN;
			}
			set
			{
				if ((this._MAPN != value))
				{
					this.OnMAPNChanging(value);
					this.SendPropertyChanging();
					this._MAPN = value;
					this.SendPropertyChanged("MAPN");
					this.OnMAPNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANCC", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MANCC
		{
			get
			{
				return this._MANCC;
			}
			set
			{
				if ((this._MANCC != value))
				{
					if (this._NHACUNGCAP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANCCChanging(value);
					this.SendPropertyChanging();
					this._MANCC = value;
					this.SendPropertyChanged("MANCC");
					this.OnMANCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYNHAP", DbType="Date NOT NULL")]
		public System.DateTime NGAYNHAP
		{
			get
			{
				return this._NGAYNHAP;
			}
			set
			{
				if ((this._NGAYNHAP != value))
				{
					this.OnNGAYNHAPChanging(value);
					this.SendPropertyChanging();
					this._NGAYNHAP = value;
					this.SendPropertyChanged("NGAYNHAP");
					this.OnNGAYNHAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GHICHUN", DbType="NVarChar(500)")]
		public string GHICHUN
		{
			get
			{
				return this._GHICHUN;
			}
			set
			{
				if ((this._GHICHUN != value))
				{
					this.OnGHICHUNChanging(value);
					this.SendPropertyChanging();
					this._GHICHUN = value;
					this.SendPropertyChanged("GHICHUN");
					this.OnGHICHUNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRANGTHAI", DbType="Bit")]
		public System.Nullable<bool> TRANGTHAI
		{
			get
			{
				return this._TRANGTHAI;
			}
			set
			{
				if ((this._TRANGTHAI != value))
				{
					this.OnTRANGTHAIChanging(value);
					this.SendPropertyChanging();
					this._TRANGTHAI = value;
					this.SendPropertyChanged("TRANGTHAI");
					this.OnTRANGTHAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TONGTIEN", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> TONGTIEN
		{
			get
			{
				return this._TONGTIEN;
			}
			set
			{
				if ((this._TONGTIEN != value))
				{
					this.OnTONGTIENChanging(value);
					this.SendPropertyChanging();
					this._TONGTIEN = value;
					this.SendPropertyChanged("TONGTIEN");
					this.OnTONGTIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUNHAPHANG_CHITIETPHIEUNHAP", Storage="_CHITIETPHIEUNHAPs", ThisKey="MAPN", OtherKey="MAPN")]
		public EntitySet<CHITIETPHIEUNHAP> CHITIETPHIEUNHAPs
		{
			get
			{
				return this._CHITIETPHIEUNHAPs;
			}
			set
			{
				this._CHITIETPHIEUNHAPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHACUNGCAP_PHIEUNHAPHANG", Storage="_NHACUNGCAP", ThisKey="MANCC", OtherKey="MANCC", IsForeignKey=true)]
		public NHACUNGCAP NHACUNGCAP
		{
			get
			{
				return this._NHACUNGCAP.Entity;
			}
			set
			{
				NHACUNGCAP previousValue = this._NHACUNGCAP.Entity;
				if (((previousValue != value) 
							|| (this._NHACUNGCAP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHACUNGCAP.Entity = null;
						previousValue.PHIEUNHAPHANGs.Remove(this);
					}
					this._NHACUNGCAP.Entity = value;
					if ((value != null))
					{
						value.PHIEUNHAPHANGs.Add(this);
						this._MANCC = value.MANCC;
					}
					else
					{
						this._MANCC = default(string);
					}
					this.SendPropertyChanged("NHACUNGCAP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETPHIEUNHAPs(CHITIETPHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUNHAPHANG = this;
		}
		
		private void detach_CHITIETPHIEUNHAPs(CHITIETPHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUNHAPHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHIEUXUATHANG")]
	public partial class PHIEUXUATHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAPX;
		
		private string _MAKH;
		
		private System.DateTime _NGAYXUAT;
		
		private string _GHICHUX;
		
		private System.Nullable<bool> _TRANGTHAI;
		
		private System.Nullable<decimal> _TONGTIEN;
		
		private EntitySet<CHITIETPHIEUXUAT> _CHITIETPHIEUXUATs;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPXChanging(string value);
    partial void OnMAPXChanged();
    partial void OnMAKHChanging(string value);
    partial void OnMAKHChanged();
    partial void OnNGAYXUATChanging(System.DateTime value);
    partial void OnNGAYXUATChanged();
    partial void OnGHICHUXChanging(string value);
    partial void OnGHICHUXChanged();
    partial void OnTRANGTHAIChanging(System.Nullable<bool> value);
    partial void OnTRANGTHAIChanged();
    partial void OnTONGTIENChanging(System.Nullable<decimal> value);
    partial void OnTONGTIENChanged();
    #endregion
		
		public PHIEUXUATHANG()
		{
			this._CHITIETPHIEUXUATs = new EntitySet<CHITIETPHIEUXUAT>(new Action<CHITIETPHIEUXUAT>(this.attach_CHITIETPHIEUXUATs), new Action<CHITIETPHIEUXUAT>(this.detach_CHITIETPHIEUXUATs));
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPX", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAPX
		{
			get
			{
				return this._MAPX;
			}
			set
			{
				if ((this._MAPX != value))
				{
					this.OnMAPXChanging(value);
					this.SendPropertyChanging();
					this._MAPX = value;
					this.SendPropertyChanged("MAPX");
					this.OnMAPXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKH", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MAKH
		{
			get
			{
				return this._MAKH;
			}
			set
			{
				if ((this._MAKH != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKHChanging(value);
					this.SendPropertyChanging();
					this._MAKH = value;
					this.SendPropertyChanged("MAKH");
					this.OnMAKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYXUAT", DbType="Date NOT NULL")]
		public System.DateTime NGAYXUAT
		{
			get
			{
				return this._NGAYXUAT;
			}
			set
			{
				if ((this._NGAYXUAT != value))
				{
					this.OnNGAYXUATChanging(value);
					this.SendPropertyChanging();
					this._NGAYXUAT = value;
					this.SendPropertyChanged("NGAYXUAT");
					this.OnNGAYXUATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GHICHUX", DbType="NVarChar(500)")]
		public string GHICHUX
		{
			get
			{
				return this._GHICHUX;
			}
			set
			{
				if ((this._GHICHUX != value))
				{
					this.OnGHICHUXChanging(value);
					this.SendPropertyChanging();
					this._GHICHUX = value;
					this.SendPropertyChanged("GHICHUX");
					this.OnGHICHUXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRANGTHAI", DbType="Bit")]
		public System.Nullable<bool> TRANGTHAI
		{
			get
			{
				return this._TRANGTHAI;
			}
			set
			{
				if ((this._TRANGTHAI != value))
				{
					this.OnTRANGTHAIChanging(value);
					this.SendPropertyChanging();
					this._TRANGTHAI = value;
					this.SendPropertyChanged("TRANGTHAI");
					this.OnTRANGTHAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TONGTIEN", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> TONGTIEN
		{
			get
			{
				return this._TONGTIEN;
			}
			set
			{
				if ((this._TONGTIEN != value))
				{
					this.OnTONGTIENChanging(value);
					this.SendPropertyChanging();
					this._TONGTIEN = value;
					this.SendPropertyChanged("TONGTIEN");
					this.OnTONGTIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUXUATHANG_CHITIETPHIEUXUAT", Storage="_CHITIETPHIEUXUATs", ThisKey="MAPX", OtherKey="MAPX")]
		public EntitySet<CHITIETPHIEUXUAT> CHITIETPHIEUXUATs
		{
			get
			{
				return this._CHITIETPHIEUXUATs;
			}
			set
			{
				this._CHITIETPHIEUXUATs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_PHIEUXUATHANG", Storage="_KHACHHANG", ThisKey="MAKH", OtherKey="MAKH", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.PHIEUXUATHANGs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.PHIEUXUATHANGs.Add(this);
						this._MAKH = value.MAKH;
					}
					else
					{
						this._MAKH = default(string);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETPHIEUXUATs(CHITIETPHIEUXUAT entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUXUATHANG = this;
		}
		
		private void detach_CHITIETPHIEUXUATs(CHITIETPHIEUXUAT entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUXUATHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QUANHUYEN")]
	public partial class QUANHUYEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAQUANHUYEN;
		
		private string _MATINHTHANH;
		
		private string _TENQUANHUYEN;
		
		private EntitySet<KHACHHANG> _KHACHHANGs;
		
		private EntitySet<NHACUNGCAP> _NHACUNGCAPs;
		
		private EntityRef<TINHTHANH> _TINHTHANH;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAQUANHUYENChanging(string value);
    partial void OnMAQUANHUYENChanged();
    partial void OnMATINHTHANHChanging(string value);
    partial void OnMATINHTHANHChanged();
    partial void OnTENQUANHUYENChanging(string value);
    partial void OnTENQUANHUYENChanged();
    #endregion
		
		public QUANHUYEN()
		{
			this._KHACHHANGs = new EntitySet<KHACHHANG>(new Action<KHACHHANG>(this.attach_KHACHHANGs), new Action<KHACHHANG>(this.detach_KHACHHANGs));
			this._NHACUNGCAPs = new EntitySet<NHACUNGCAP>(new Action<NHACUNGCAP>(this.attach_NHACUNGCAPs), new Action<NHACUNGCAP>(this.detach_NHACUNGCAPs));
			this._TINHTHANH = default(EntityRef<TINHTHANH>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAQUANHUYEN", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAQUANHUYEN
		{
			get
			{
				return this._MAQUANHUYEN;
			}
			set
			{
				if ((this._MAQUANHUYEN != value))
				{
					this.OnMAQUANHUYENChanging(value);
					this.SendPropertyChanging();
					this._MAQUANHUYEN = value;
					this.SendPropertyChanged("MAQUANHUYEN");
					this.OnMAQUANHUYENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATINHTHANH", DbType="VarChar(10)")]
		public string MATINHTHANH
		{
			get
			{
				return this._MATINHTHANH;
			}
			set
			{
				if ((this._MATINHTHANH != value))
				{
					if (this._TINHTHANH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMATINHTHANHChanging(value);
					this.SendPropertyChanging();
					this._MATINHTHANH = value;
					this.SendPropertyChanged("MATINHTHANH");
					this.OnMATINHTHANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENQUANHUYEN", DbType="NVarChar(500)")]
		public string TENQUANHUYEN
		{
			get
			{
				return this._TENQUANHUYEN;
			}
			set
			{
				if ((this._TENQUANHUYEN != value))
				{
					this.OnTENQUANHUYENChanging(value);
					this.SendPropertyChanging();
					this._TENQUANHUYEN = value;
					this.SendPropertyChanged("TENQUANHUYEN");
					this.OnTENQUANHUYENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QUANHUYEN_KHACHHANG", Storage="_KHACHHANGs", ThisKey="MAQUANHUYEN", OtherKey="MAQUANHUYEN")]
		public EntitySet<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this._KHACHHANGs;
			}
			set
			{
				this._KHACHHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QUANHUYEN_NHACUNGCAP", Storage="_NHACUNGCAPs", ThisKey="MAQUANHUYEN", OtherKey="MAQUANHUYEN")]
		public EntitySet<NHACUNGCAP> NHACUNGCAPs
		{
			get
			{
				return this._NHACUNGCAPs;
			}
			set
			{
				this._NHACUNGCAPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TINHTHANH_QUANHUYEN", Storage="_TINHTHANH", ThisKey="MATINHTHANH", OtherKey="MATINHTHANH", IsForeignKey=true)]
		public TINHTHANH TINHTHANH
		{
			get
			{
				return this._TINHTHANH.Entity;
			}
			set
			{
				TINHTHANH previousValue = this._TINHTHANH.Entity;
				if (((previousValue != value) 
							|| (this._TINHTHANH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TINHTHANH.Entity = null;
						previousValue.QUANHUYENs.Remove(this);
					}
					this._TINHTHANH.Entity = value;
					if ((value != null))
					{
						value.QUANHUYENs.Add(this);
						this._MATINHTHANH = value.MATINHTHANH;
					}
					else
					{
						this._MATINHTHANH = default(string);
					}
					this.SendPropertyChanged("TINHTHANH");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KHACHHANGs(KHACHHANG entity)
		{
			this.SendPropertyChanging();
			entity.QUANHUYEN = this;
		}
		
		private void detach_KHACHHANGs(KHACHHANG entity)
		{
			this.SendPropertyChanging();
			entity.QUANHUYEN = null;
		}
		
		private void attach_NHACUNGCAPs(NHACUNGCAP entity)
		{
			this.SendPropertyChanging();
			entity.QUANHUYEN = this;
		}
		
		private void detach_NHACUNGCAPs(NHACUNGCAP entity)
		{
			this.SendPropertyChanging();
			entity.QUANHUYEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SANPHAM")]
	public partial class SANPHAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MASP;
		
		private string _MALOAISANPHAM;
		
		private string _MAHSX;
		
		private string _MAXUATXU;
		
		private string _TENSANPHAM;
		
		private string _HINHSP;
		
		private string _THANHPHAN;
		
		private string _CONGDUNG;
		
		private string _BAOQUAN;
		
		private string _GHICHUSP;
		
		private string _DVT;
		
		private int _SOLOSP;
		
		private System.DateTime _NGAYSANXUAT;
		
		private System.DateTime _HANSUDUNG;
		
		private System.Nullable<decimal> _DONGIASP;
		
		private int _SOLUONGTON;
		
		private EntitySet<CTTB_CTTL> _CTTB_CTTLs;
		
		private EntitySet<CHITIETPHIEUNHAP> _CHITIETPHIEUNHAPs;
		
		private EntitySet<CHITIETPHIEUXUAT> _CHITIETPHIEUXUATs;
		
		private EntitySet<CHITIETHOADONBAN> _CHITIETHOADONBANs;
		
		private EntityRef<HANGSANXUAT> _HANGSANXUAT;
		
		private EntityRef<LOAISANPHAM> _LOAISANPHAM;
		
		private EntityRef<XUATXU> _XUATXU;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMASPChanging(string value);
    partial void OnMASPChanged();
    partial void OnMALOAISANPHAMChanging(string value);
    partial void OnMALOAISANPHAMChanged();
    partial void OnMAHSXChanging(string value);
    partial void OnMAHSXChanged();
    partial void OnMAXUATXUChanging(string value);
    partial void OnMAXUATXUChanged();
    partial void OnTENSANPHAMChanging(string value);
    partial void OnTENSANPHAMChanged();
    partial void OnHINHSPChanging(string value);
    partial void OnHINHSPChanged();
    partial void OnTHANHPHANChanging(string value);
    partial void OnTHANHPHANChanged();
    partial void OnCONGDUNGChanging(string value);
    partial void OnCONGDUNGChanged();
    partial void OnBAOQUANChanging(string value);
    partial void OnBAOQUANChanged();
    partial void OnGHICHUSPChanging(string value);
    partial void OnGHICHUSPChanged();
    partial void OnDVTChanging(string value);
    partial void OnDVTChanged();
    partial void OnSOLOSPChanging(int value);
    partial void OnSOLOSPChanged();
    partial void OnNGAYSANXUATChanging(System.DateTime value);
    partial void OnNGAYSANXUATChanged();
    partial void OnHANSUDUNGChanging(System.DateTime value);
    partial void OnHANSUDUNGChanged();
    partial void OnDONGIASPChanging(System.Nullable<decimal> value);
    partial void OnDONGIASPChanged();
    partial void OnSOLUONGTONChanging(int value);
    partial void OnSOLUONGTONChanged();
    #endregion
		
		public SANPHAM()
		{
			this._CTTB_CTTLs = new EntitySet<CTTB_CTTL>(new Action<CTTB_CTTL>(this.attach_CTTB_CTTLs), new Action<CTTB_CTTL>(this.detach_CTTB_CTTLs));
			this._CHITIETPHIEUNHAPs = new EntitySet<CHITIETPHIEUNHAP>(new Action<CHITIETPHIEUNHAP>(this.attach_CHITIETPHIEUNHAPs), new Action<CHITIETPHIEUNHAP>(this.detach_CHITIETPHIEUNHAPs));
			this._CHITIETPHIEUXUATs = new EntitySet<CHITIETPHIEUXUAT>(new Action<CHITIETPHIEUXUAT>(this.attach_CHITIETPHIEUXUATs), new Action<CHITIETPHIEUXUAT>(this.detach_CHITIETPHIEUXUATs));
			this._CHITIETHOADONBANs = new EntitySet<CHITIETHOADONBAN>(new Action<CHITIETHOADONBAN>(this.attach_CHITIETHOADONBANs), new Action<CHITIETHOADONBAN>(this.detach_CHITIETHOADONBANs));
			this._HANGSANXUAT = default(EntityRef<HANGSANXUAT>);
			this._LOAISANPHAM = default(EntityRef<LOAISANPHAM>);
			this._XUATXU = default(EntityRef<XUATXU>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASP", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MASP
		{
			get
			{
				return this._MASP;
			}
			set
			{
				if ((this._MASP != value))
				{
					this.OnMASPChanging(value);
					this.SendPropertyChanging();
					this._MASP = value;
					this.SendPropertyChanged("MASP");
					this.OnMASPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAISANPHAM", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MALOAISANPHAM
		{
			get
			{
				return this._MALOAISANPHAM;
			}
			set
			{
				if ((this._MALOAISANPHAM != value))
				{
					if (this._LOAISANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMALOAISANPHAMChanging(value);
					this.SendPropertyChanging();
					this._MALOAISANPHAM = value;
					this.SendPropertyChanged("MALOAISANPHAM");
					this.OnMALOAISANPHAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHSX", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MAHSX
		{
			get
			{
				return this._MAHSX;
			}
			set
			{
				if ((this._MAHSX != value))
				{
					if (this._HANGSANXUAT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAHSXChanging(value);
					this.SendPropertyChanging();
					this._MAHSX = value;
					this.SendPropertyChanged("MAHSX");
					this.OnMAHSXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAXUATXU", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MAXUATXU
		{
			get
			{
				return this._MAXUATXU;
			}
			set
			{
				if ((this._MAXUATXU != value))
				{
					if (this._XUATXU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAXUATXUChanging(value);
					this.SendPropertyChanging();
					this._MAXUATXU = value;
					this.SendPropertyChanged("MAXUATXU");
					this.OnMAXUATXUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENSANPHAM", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string TENSANPHAM
		{
			get
			{
				return this._TENSANPHAM;
			}
			set
			{
				if ((this._TENSANPHAM != value))
				{
					this.OnTENSANPHAMChanging(value);
					this.SendPropertyChanging();
					this._TENSANPHAM = value;
					this.SendPropertyChanged("TENSANPHAM");
					this.OnTENSANPHAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HINHSP", DbType="NVarChar(500)")]
		public string HINHSP
		{
			get
			{
				return this._HINHSP;
			}
			set
			{
				if ((this._HINHSP != value))
				{
					this.OnHINHSPChanging(value);
					this.SendPropertyChanging();
					this._HINHSP = value;
					this.SendPropertyChanged("HINHSP");
					this.OnHINHSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THANHPHAN", DbType="NVarChar(500)")]
		public string THANHPHAN
		{
			get
			{
				return this._THANHPHAN;
			}
			set
			{
				if ((this._THANHPHAN != value))
				{
					this.OnTHANHPHANChanging(value);
					this.SendPropertyChanging();
					this._THANHPHAN = value;
					this.SendPropertyChanged("THANHPHAN");
					this.OnTHANHPHANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONGDUNG", DbType="NVarChar(500)")]
		public string CONGDUNG
		{
			get
			{
				return this._CONGDUNG;
			}
			set
			{
				if ((this._CONGDUNG != value))
				{
					this.OnCONGDUNGChanging(value);
					this.SendPropertyChanging();
					this._CONGDUNG = value;
					this.SendPropertyChanged("CONGDUNG");
					this.OnCONGDUNGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BAOQUAN", DbType="NVarChar(500)")]
		public string BAOQUAN
		{
			get
			{
				return this._BAOQUAN;
			}
			set
			{
				if ((this._BAOQUAN != value))
				{
					this.OnBAOQUANChanging(value);
					this.SendPropertyChanging();
					this._BAOQUAN = value;
					this.SendPropertyChanged("BAOQUAN");
					this.OnBAOQUANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GHICHUSP", DbType="NVarChar(500)")]
		public string GHICHUSP
		{
			get
			{
				return this._GHICHUSP;
			}
			set
			{
				if ((this._GHICHUSP != value))
				{
					this.OnGHICHUSPChanging(value);
					this.SendPropertyChanging();
					this._GHICHUSP = value;
					this.SendPropertyChanged("GHICHUSP");
					this.OnGHICHUSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DVT", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string DVT
		{
			get
			{
				return this._DVT;
			}
			set
			{
				if ((this._DVT != value))
				{
					this.OnDVTChanging(value);
					this.SendPropertyChanging();
					this._DVT = value;
					this.SendPropertyChanged("DVT");
					this.OnDVTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLOSP", DbType="Int NOT NULL")]
		public int SOLOSP
		{
			get
			{
				return this._SOLOSP;
			}
			set
			{
				if ((this._SOLOSP != value))
				{
					this.OnSOLOSPChanging(value);
					this.SendPropertyChanging();
					this._SOLOSP = value;
					this.SendPropertyChanged("SOLOSP");
					this.OnSOLOSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYSANXUAT", DbType="Date NOT NULL")]
		public System.DateTime NGAYSANXUAT
		{
			get
			{
				return this._NGAYSANXUAT;
			}
			set
			{
				if ((this._NGAYSANXUAT != value))
				{
					this.OnNGAYSANXUATChanging(value);
					this.SendPropertyChanging();
					this._NGAYSANXUAT = value;
					this.SendPropertyChanged("NGAYSANXUAT");
					this.OnNGAYSANXUATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HANSUDUNG", DbType="Date NOT NULL")]
		public System.DateTime HANSUDUNG
		{
			get
			{
				return this._HANSUDUNG;
			}
			set
			{
				if ((this._HANSUDUNG != value))
				{
					this.OnHANSUDUNGChanging(value);
					this.SendPropertyChanging();
					this._HANSUDUNG = value;
					this.SendPropertyChanged("HANSUDUNG");
					this.OnHANSUDUNGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DONGIASP", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> DONGIASP
		{
			get
			{
				return this._DONGIASP;
			}
			set
			{
				if ((this._DONGIASP != value))
				{
					this.OnDONGIASPChanging(value);
					this.SendPropertyChanging();
					this._DONGIASP = value;
					this.SendPropertyChanged("DONGIASP");
					this.OnDONGIASPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONGTON", DbType="Int NOT NULL")]
		public int SOLUONGTON
		{
			get
			{
				return this._SOLUONGTON;
			}
			set
			{
				if ((this._SOLUONGTON != value))
				{
					this.OnSOLUONGTONChanging(value);
					this.SendPropertyChanging();
					this._SOLUONGTON = value;
					this.SendPropertyChanged("SOLUONGTON");
					this.OnSOLUONGTONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CTTB_CTTL", Storage="_CTTB_CTTLs", ThisKey="MASP", OtherKey="MASP")]
		public EntitySet<CTTB_CTTL> CTTB_CTTLs
		{
			get
			{
				return this._CTTB_CTTLs;
			}
			set
			{
				this._CTTB_CTTLs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CHITIETPHIEUNHAP", Storage="_CHITIETPHIEUNHAPs", ThisKey="MASP", OtherKey="MASP")]
		public EntitySet<CHITIETPHIEUNHAP> CHITIETPHIEUNHAPs
		{
			get
			{
				return this._CHITIETPHIEUNHAPs;
			}
			set
			{
				this._CHITIETPHIEUNHAPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CHITIETPHIEUXUAT", Storage="_CHITIETPHIEUXUATs", ThisKey="MASP", OtherKey="MASP")]
		public EntitySet<CHITIETPHIEUXUAT> CHITIETPHIEUXUATs
		{
			get
			{
				return this._CHITIETPHIEUXUATs;
			}
			set
			{
				this._CHITIETPHIEUXUATs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CHITIETHOADONBAN", Storage="_CHITIETHOADONBANs", ThisKey="MASP", OtherKey="MASP")]
		public EntitySet<CHITIETHOADONBAN> CHITIETHOADONBANs
		{
			get
			{
				return this._CHITIETHOADONBANs;
			}
			set
			{
				this._CHITIETHOADONBANs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HANGSANXUAT_SANPHAM", Storage="_HANGSANXUAT", ThisKey="MAHSX", OtherKey="MAHSX", IsForeignKey=true)]
		public HANGSANXUAT HANGSANXUAT
		{
			get
			{
				return this._HANGSANXUAT.Entity;
			}
			set
			{
				HANGSANXUAT previousValue = this._HANGSANXUAT.Entity;
				if (((previousValue != value) 
							|| (this._HANGSANXUAT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HANGSANXUAT.Entity = null;
						previousValue.SANPHAMs.Remove(this);
					}
					this._HANGSANXUAT.Entity = value;
					if ((value != null))
					{
						value.SANPHAMs.Add(this);
						this._MAHSX = value.MAHSX;
					}
					else
					{
						this._MAHSX = default(string);
					}
					this.SendPropertyChanged("HANGSANXUAT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAISANPHAM_SANPHAM", Storage="_LOAISANPHAM", ThisKey="MALOAISANPHAM", OtherKey="MALOAISANPHAM", IsForeignKey=true)]
		public LOAISANPHAM LOAISANPHAM
		{
			get
			{
				return this._LOAISANPHAM.Entity;
			}
			set
			{
				LOAISANPHAM previousValue = this._LOAISANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._LOAISANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAISANPHAM.Entity = null;
						previousValue.SANPHAMs.Remove(this);
					}
					this._LOAISANPHAM.Entity = value;
					if ((value != null))
					{
						value.SANPHAMs.Add(this);
						this._MALOAISANPHAM = value.MALOAISANPHAM;
					}
					else
					{
						this._MALOAISANPHAM = default(string);
					}
					this.SendPropertyChanged("LOAISANPHAM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="XUATXU_SANPHAM", Storage="_XUATXU", ThisKey="MAXUATXU", OtherKey="MAXUATXU", IsForeignKey=true)]
		public XUATXU XUATXU
		{
			get
			{
				return this._XUATXU.Entity;
			}
			set
			{
				XUATXU previousValue = this._XUATXU.Entity;
				if (((previousValue != value) 
							|| (this._XUATXU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._XUATXU.Entity = null;
						previousValue.SANPHAMs.Remove(this);
					}
					this._XUATXU.Entity = value;
					if ((value != null))
					{
						value.SANPHAMs.Add(this);
						this._MAXUATXU = value.MAXUATXU;
					}
					else
					{
						this._MAXUATXU = default(string);
					}
					this.SendPropertyChanged("XUATXU");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTTB_CTTLs(CTTB_CTTL entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_CTTB_CTTLs(CTTB_CTTL entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
		
		private void attach_CHITIETPHIEUNHAPs(CHITIETPHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_CHITIETPHIEUNHAPs(CHITIETPHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
		
		private void attach_CHITIETPHIEUXUATs(CHITIETPHIEUXUAT entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_CHITIETPHIEUXUATs(CHITIETPHIEUXUAT entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
		
		private void attach_CHITIETHOADONBANs(CHITIETHOADONBAN entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_CHITIETHOADONBANs(CHITIETHOADONBAN entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TINHTHANH")]
	public partial class TINHTHANH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MATINHTHANH;
		
		private string _TENTINHTHANH;
		
		private EntitySet<QUANHUYEN> _QUANHUYENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMATINHTHANHChanging(string value);
    partial void OnMATINHTHANHChanged();
    partial void OnTENTINHTHANHChanging(string value);
    partial void OnTENTINHTHANHChanged();
    #endregion
		
		public TINHTHANH()
		{
			this._QUANHUYENs = new EntitySet<QUANHUYEN>(new Action<QUANHUYEN>(this.attach_QUANHUYENs), new Action<QUANHUYEN>(this.detach_QUANHUYENs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATINHTHANH", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MATINHTHANH
		{
			get
			{
				return this._MATINHTHANH;
			}
			set
			{
				if ((this._MATINHTHANH != value))
				{
					this.OnMATINHTHANHChanging(value);
					this.SendPropertyChanging();
					this._MATINHTHANH = value;
					this.SendPropertyChanged("MATINHTHANH");
					this.OnMATINHTHANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENTINHTHANH", DbType="NVarChar(500)")]
		public string TENTINHTHANH
		{
			get
			{
				return this._TENTINHTHANH;
			}
			set
			{
				if ((this._TENTINHTHANH != value))
				{
					this.OnTENTINHTHANHChanging(value);
					this.SendPropertyChanging();
					this._TENTINHTHANH = value;
					this.SendPropertyChanged("TENTINHTHANH");
					this.OnTENTINHTHANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TINHTHANH_QUANHUYEN", Storage="_QUANHUYENs", ThisKey="MATINHTHANH", OtherKey="MATINHTHANH")]
		public EntitySet<QUANHUYEN> QUANHUYENs
		{
			get
			{
				return this._QUANHUYENs;
			}
			set
			{
				this._QUANHUYENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QUANHUYENs(QUANHUYEN entity)
		{
			this.SendPropertyChanging();
			entity.TINHTHANH = this;
		}
		
		private void detach_QUANHUYENs(QUANHUYEN entity)
		{
			this.SendPropertyChanging();
			entity.TINHTHANH = null;
		}
	}
}
#pragma warning restore 1591
